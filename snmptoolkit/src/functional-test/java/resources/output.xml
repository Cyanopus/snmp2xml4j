<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ output.xml
  ~
  ~ This work is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published
  ~ by the Free Software Foundation; either version 2 of the License,
  ~ or (at your option) any later version.
  ~
  ~ This work is distributed in the hope that it will be useful, but
  ~ WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program; if not, write to the Free Software
  ~ Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
  ~ USA
  ~
  ~ Copyright (c) 2010-2016 iTransformers Labs. All rights reserved.
  -->

<root>
   <objects>
      <object name="ifEntry">
         <description>An entry containing management information applicable to a particular interface.</description>
         <indexes>
            <index name="ifIndex">
               <oid value="1.3.6.1.2.1.2.2.1.1"/>
               <syntax syntax="INTEGER"/>
               <access access="read-only"/>
               <values>
                  <value access="1"/>
                  <value access="2"/>
                  <value access="4"/>
                  <value access="5"/>
                  <value access="6"/>
                  <value access="7"/>
                  <value access="8"/>
                  <value access="9"/>
                  <value access="10"/>
                  <value access="11"/>
                  <value access="12"/>
                  <value access="13"/>
               </values>
            </index>
         </indexes>
         <indicators>
            <indicator name="ifSpeed">
               <oid>1.3.6.1.2.1.2.2.1.5</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Gauge32"/>
               <description>An estimate of the interface's current bandwidth in bits per second.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.  If the bandwidth of the interface is greater than the maximum value reportable by this object then this object should report its maximum value (4,294,967,295) and ifHighSpeed must be used to report the interace's speed.  For a sub-layer which has no concept of bandwidth, this object should be zero.</description>
            </indicator>
            <indicator name="ifInOctets">
               <oid>1.3.6.1.2.1.2.2.1.10</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Counter32"/>
               <description>The total number of octets received on the interface,   including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
            </indicator>
            <indicator name="ifInUcastPkts">
               <oid>1.3.6.1.2.1.2.2.1.11</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Counter32"/>
               <description>The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were not addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
            </indicator>
            <indicator name="ifInNUcastPkts">
               <oid>1.3.6.1.2.1.2.2.1.12</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Counter32"/>
               <description>The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifInMulticastPkts and ifInBroadcastPkts.</description>
            </indicator>
            <indicator name="ifInDiscards">
               <oid>1.3.6.1.2.1.2.2.1.13</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Counter32"/>
               <description>The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent   their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
            </indicator>
            <indicator name="ifInErrors">
               <oid>1.3.6.1.2.1.2.2.1.14</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Counter32"/>
               <description>For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character- oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
            </indicator>
            <indicator name="ifInUnknownProtos">
               <oid>1.3.6.1.2.1.2.2.1.15</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Counter32"/>
               <description>For packet-oriented interfaces, the number of packets received via the interface which were discarded because of an unknown or unsupported protocol.  For character-oriented or fixed-length interfaces that support protocol multiplexing the number of transmission units received via the interface which were discarded because of an unknown or unsupported protocol.  For any interface that does not support protocol multiplexing, this counter will always be 0.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
            </indicator>
            <indicator name="ifOutOctets">
               <oid>1.3.6.1.2.1.2.2.1.16</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Counter32"/>
               <description>The total number of octets transmitted out of the interface, including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
            </indicator>
            <indicator name="ifOutUcastPkts">
               <oid>1.3.6.1.2.1.2.2.1.17</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Counter32"/>
               <description>The total number of packets that higher-level protocols requested be transmitted, and which were not addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
            </indicator>
            <indicator name="ifOutNUcastPkts">
               <oid>1.3.6.1.2.1.2.2.1.18</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Counter32"/>
               <description>The total number of packets that higher-level protocols requested be transmitted, and which were addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifOutMulticastPkts and ifOutBroadcastPkts.</description>
            </indicator>
            <indicator name="ifOutDiscards">
               <oid>1.3.6.1.2.1.2.2.1.19</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Counter32"/>
               <description>The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
            </indicator>
            <indicator name="ifOutErrors">
               <oid>1.3.6.1.2.1.2.2.1.20</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Counter32"/>
               <description>For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.</description>
            </indicator>
            <indicator name="ifOutQLen">
               <oid>1.3.6.1.2.1.2.2.1.21</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Gauge32"/>
               <description>The length of the output packet queue (in packets).</description>
            </indicator>
         </indicators>
         <otherOids>
            <otherOid name="ifIndex">
               <oid>1.3.6.1.2.1.2.2.1.1</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="INTEGER"/>
               <description>A unique value, greater than zero, for each interface.  It is recommended that values are assigned contiguously starting from 1.  The value for each interface sub-layer must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.</description>
            </otherOid>
            <otherOid name="ifDescr">
               <oid>1.3.6.1.2.1.2.2.1.2</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="OCTET STRING"/>
               <description>A textual string containing information about the interface.  This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.</description>
            </otherOid>
            <otherOid name="ifType">
               <oid>1.3.6.1.2.1.2.2.1.3</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="INTEGER"/>
               <description>The type of interface.  Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA), through updating the syntax of the IANAifType textual convention.</description>
            </otherOid>
            <otherOid name="ifMtu">
               <oid>1.3.6.1.2.1.2.2.1.4</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="INTEGER"/>
               <description>The size of the largest packet which can be sent/received on the interface, specified in octets.  For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.</description>
            </otherOid>
            <otherOid name="ifPhysAddress">
               <oid>1.3.6.1.2.1.2.2.1.6</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="OCTET STRING"/>
               <description>The interface's address at its protocol sub-layer.  For example, for an 802.x interface, this object normally contains a MAC address.  The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object.  For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.</description>
            </otherOid>
            <otherOid name="ifAdminStatus">
               <oid>1.3.6.1.2.1.2.2.1.7</oid>
               <access type="read-write"/>
               <units type="null"/>
               <snmpSyntax type="INTEGER"/>
               <description>The desired state of the interface.  The testing(3) state indicates that no operational packets can be passed.  When a managed system initializes, all interfaces start with ifAdminStatus in the down(2) state.  As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).</description>
            </otherOid>
            <otherOid name="ifOperStatus">
               <oid>1.3.6.1.2.1.2.2.1.8</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="INTEGER"/>
               <description>The current operational state of the interface.  The testing(3) state indicates that no operational packets can be passed.  If ifAdminStatus is down(2) then ifOperStatus should be down(2).  If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection); it should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(6) state if the interface has missing (typically, hardware) components.</description>
            </otherOid>
            <otherOid name="ifLastChange">
               <oid>1.3.6.1.2.1.2.2.1.9</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="TimeTicks"/>
               <description>The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.</description>
            </otherOid>
            <otherOid name="ifSpecific">
               <oid>1.3.6.1.2.1.2.2.1.22</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="OBJECT IDENTIFIER"/>
               <description>A reference to MIB definitions specific to the particular media being used to realize the interface.  It is   recommended that this value point to an instance of a MIB object in the media-specific MIB, i.e., that this object have the semantics associated with the InstancePointer textual convention defined in RFC 2579.  In fact, it is recommended that the media-specific MIB specify what value ifSpecific should/can take for values of ifType.  If no MIB definitions specific to the particular media are available, the value should be set to the OBJECT IDENTIFIER { 0 0 }.</description>
            </otherOid>
         </otherOids>
      </object>
      <object name="hrSystem">
         <description/>
         <indexes/>
         <indicators>
            <indicator name="hrSystemNumUsers">
               <oid>1.3.6.1.2.1.25.1.5</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Gauge32"/>
               <description>The number of user sessions for which this host is storing state information.  A session is a collection of processes requiring a single act of user authentication and possibly subject to collective job control.</description>
            </indicator>
            <indicator name="hrSystemProcesses">
               <oid>1.3.6.1.2.1.25.1.6</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Gauge32"/>
               <description>The number of process contexts currently loaded or running on this system.</description>
            </indicator>
         </indicators>
         <otherOids>
            <otherOid name="hrSystemUptime">
               <oid>1.3.6.1.2.1.25.1.1</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="TimeTicks"/>
               <description>The amount of time since this host was last initialized.  Note that this is different from sysUpTime in the SNMPv2-MIB [RFC1907] because sysUpTime is the uptime of the network management portion of the system.</description>
            </otherOid>
            <otherOid name="hrSystemDate">
               <oid>1.3.6.1.2.1.25.1.2</oid>
               <access type="read-write"/>
               <units type="null"/>
               <snmpSyntax type="OCTET STRING"/>
               <description>The host's notion of the local date and time of day.</description>
            </otherOid>
            <otherOid name="hrSystemInitialLoadDevice">
               <oid>1.3.6.1.2.1.25.1.3</oid>
               <access type="read-write"/>
               <units type="null"/>
               <snmpSyntax type="INTEGER"/>
               <description>The index of the hrDeviceEntry for the device from which this host is configured to load its initial operating system configuration (i.e., which operating system code and/or boot parameters).  Note that writing to this object just changes the configuration that will be used the next time the operating system is loaded and does not actually cause the reload to occur.</description>
            </otherOid>
            <otherOid name="hrSystemInitialLoadParameters">
               <oid>1.3.6.1.2.1.25.1.4</oid>
               <access type="read-write"/>
               <units type="null"/>
               <snmpSyntax type="OCTET STRING"/>
               <description>This object contains the parameters (e.g. a pathname and parameter) supplied to the load device when requesting the initial operating system configuration from that device.  Note that writing to this object just changes the configuration that will be used the next time the operating system is loaded and does not actually cause the reload to occur.</description>
            </otherOid>
            <otherOid name="hrSystemMaxProcesses">
               <oid>1.3.6.1.2.1.25.1.7</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="INTEGER"/>
               <description>The maximum number of process contexts this system can support.  If there is no fixed maximum, the value should be zero.  On systems that have a fixed maximum, this object can help diagnose failures that occur when this maximum is reached.</description>
            </otherOid>
         </otherOids>
      </object>
      <object name="hrDeviceEntry">
         <description>A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3</description>
         <indexes>
            <index name="hrDeviceIndex">
               <oid value="1.3.6.1.2.1.25.3.2.1.1"/>
               <syntax syntax="INTEGER"/>
               <access access="read-only"/>
               <values>
                  <value access="768"/>
                  <value access="1025"/>
                  <value access="1026"/>
                  <value access="1028"/>
                  <value access="1029"/>
                  <value access="1030"/>
                  <value access="1031"/>
                  <value access="1032"/>
                  <value access="1033"/>
                  <value access="1034"/>
                  <value access="1035"/>
                  <value access="1036"/>
                  <value access="1037"/>
               </values>
            </index>
         </indexes>
         <indicators>
            <indicator name="hrDeviceErrors">
               <oid>1.3.6.1.2.1.25.3.2.1.6</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="Counter32"/>
               <description>The number of errors detected on this device.  It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.  However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization.</description>
            </indicator>
         </indicators>
         <otherOids>
            <otherOid name="hrDeviceIndex">
               <oid>1.3.6.1.2.1.25.3.2.1.1</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="INTEGER"/>
               <description>A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.</description>
            </otherOid>
            <otherOid name="hrDeviceType">
               <oid>1.3.6.1.2.1.25.3.2.1.2</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="OBJECT IDENTIFIER"/>
               <description>An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.</description>
            </otherOid>
            <otherOid name="hrDeviceDescr">
               <oid>1.3.6.1.2.1.25.3.2.1.3</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="OCTET STRING"/>
               <description>A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.</description>
            </otherOid>
            <otherOid name="hrDeviceID">
               <oid>1.3.6.1.2.1.25.3.2.1.4</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="OBJECT IDENTIFIER"/>
               <description>The product ID for this device.</description>
            </otherOid>
            <otherOid name="hrDeviceStatus">
               <oid>1.3.6.1.2.1.25.3.2.1.5</oid>
               <access type="read-only"/>
               <units type="null"/>
               <snmpSyntax type="INTEGER"/>
               <description>The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.</description>
            </otherOid>
         </otherOids>
      </object>
   </objects>
</root>
