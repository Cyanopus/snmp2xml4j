<?xml version="1.0" ?>
<!--
  ~ openwrt.xml
  ~
  ~ This work is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published
  ~ by the Free Software Foundation; either version 2 of the License,
  ~ or (at your option) any later version.
  ~
  ~ This work is distributed in the hope that it will be useful, but
  ~ WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program; if not, write to the Free Software
  ~ Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
  ~ USA
  ~
  ~ Copyright (c) 2010-2016 iTransformers Labs. All rights reserved.
  -->

<root>
<iso oid="1">
	<org oid="1.3">
		<dod oid="1.3.6">
			<internet oid="1.3.6.1">
				<mgmt oid="1.3.6.1.2">
					<mib-2 oid="1.3.6.1.2.1">
						<interfaces oid="1.3.6.1.2.1.2">
							<ifTable oid="1.3.6.1.2.1.2.2">
								<ifEntry oid="1.3.6.1.2.1.2.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
									<description><![CDATA[An entry containing management information applicable to a particular interface.]]></description>
									<index name="ifIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.2.2.1.1" access="read-only">1</index>
									<instance instanceIndex="1" instanceName="ifIndex" instanceValue="1">1</instance>
									<ifIndex oid="1.3.6.1.2.1.2.2.1.1.1" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[A unique value, greater than zero, for each interface.  It is recommended that values are assigned contiguously starting from 1.  The value for each interface sub-layer must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.]]></description>
										<value>1</value>
									</ifIndex>
									<ifDescr oid="1.3.6.1.2.1.2.2.1.2.1" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[A textual string containing information about the interface.  This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.]]></description>
										<value>lo</value>
									</ifDescr>
									<ifType oid="1.3.6.1.2.1.2.2.1.3.1" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The type of interface.  Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA), through updating the syntax of the IANAifType textual convention.]]></description>
										<value>24</value>
									</ifType>
									<ifMtu oid="1.3.6.1.2.1.2.2.1.4.1" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The size of the largest packet which can be sent/received on the interface, specified in octets.  For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.]]></description>
										<value>16436</value>
									</ifMtu>
									<ifSpeed oid="1.3.6.1.2.1.2.2.1.5.1" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[An estimate of the interface's current bandwidth in bits per second.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.  If the bandwidth of the interface is greater than the maximum value reportable by this object then this object should report its maximum value (4,294,967,295) and ifHighSpeed must be used to report the interace's speed.  For a sub-layer which has no concept of bandwidth, this object should be zero.]]></description>
										<value>10000000</value>
									</ifSpeed>
									<ifPhysAddress oid="1.3.6.1.2.1.2.2.1.6.1" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[The interface's address at its protocol sub-layer.  For example, for an 802.x interface, this object normally contains a MAC address.  The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object.  For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.]]></description>
										<value></value>
									</ifPhysAddress>
									<ifAdminStatus oid="1.3.6.1.2.1.2.2.1.7.1" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
										<description><![CDATA[The desired state of the interface.  The testing(3) state indicates that no operational packets can be passed.  When a managed system initializes, all interfaces start with ifAdminStatus in the down(2) state.  As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).]]></description>
										<value>1</value>
									</ifAdminStatus>
									<ifOperStatus oid="1.3.6.1.2.1.2.2.1.8.1" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The current operational state of the interface.  The testing(3) state indicates that no operational packets can be passed.  If ifAdminStatus is down(2) then ifOperStatus should be down(2).  If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection); it should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(6) state if the interface has missing (typically, hardware) components.]]></description>
										<value>1</value>
									</ifOperStatus>
									<ifLastChange oid="1.3.6.1.2.1.2.2.1.9.1" primitiveSyntax="INTEGER" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.]]></description>
										<value>0:00:00.00</value>
									</ifLastChange>
									<ifInOctets oid="1.3.6.1.2.1.2.2.1.10.1" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets received on the interface,   including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>3990</value>
									</ifInOctets>
									<ifInUcastPkts oid="1.3.6.1.2.1.2.2.1.11.1" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were not addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>21</value>
									</ifInUcastPkts>
									<ifInNUcastPkts oid="1.3.6.1.2.1.2.2.1.12.1" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifInMulticastPkts and ifInBroadcastPkts.]]></description>
										<value>0</value>
									</ifInNUcastPkts>
									<ifInDiscards oid="1.3.6.1.2.1.2.2.1.13.1" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent   their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInDiscards>
									<ifInErrors oid="1.3.6.1.2.1.2.2.1.14.1" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character- oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInErrors>
									<ifInUnknownProtos oid="1.3.6.1.2.1.2.2.1.15.1" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of packets received via the interface which were discarded because of an unknown or unsupported protocol.  For character-oriented or fixed-length interfaces that support protocol multiplexing the number of transmission units received via the interface which were discarded because of an unknown or unsupported protocol.  For any interface that does not support protocol multiplexing, this counter will always be 0.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUnknownProtos>
									<ifOutOctets oid="1.3.6.1.2.1.2.2.1.16.1" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets transmitted out of the interface, including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>3990</value>
									</ifOutOctets>
									<ifOutUcastPkts oid="1.3.6.1.2.1.2.2.1.17.1" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were not addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>21</value>
									</ifOutUcastPkts>
									<ifOutNUcastPkts oid="1.3.6.1.2.1.2.2.1.18.1" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifOutMulticastPkts and ifOutBroadcastPkts.]]></description>
										<value>0</value>
									</ifOutNUcastPkts>
									<ifOutDiscards oid="1.3.6.1.2.1.2.2.1.19.1" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutDiscards>
									<ifOutErrors oid="1.3.6.1.2.1.2.2.1.20.1" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutErrors>
									<ifOutQLen oid="1.3.6.1.2.1.2.2.1.21.1" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The length of the output packet queue (in packets).]]></description>
										<value>0</value>
									</ifOutQLen>
									<ifSpecific oid="1.3.6.1.2.1.2.2.1.22.1" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
										<description><![CDATA[A reference to MIB definitions specific to the particular media being used to realize the interface.  It is   recommended that this value point to an instance of a MIB object in the media-specific MIB, i.e., that this object have the semantics associated with the InstancePointer textual convention defined in RFC 2579.  In fact, it is recommended that the media-specific MIB specify what value ifSpecific should/can take for values of ifType.  If no MIB definitions specific to the particular media are available, the value should be set to the OBJECT IDENTIFIER { 0 0 }.]]></description>
										<value>0.0</value>
									</ifSpecific>

								</ifEntry>
								<ifEntry oid="1.3.6.1.2.1.2.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
									<description><![CDATA[An entry containing management information applicable to a particular interface.]]></description>
									<index name="ifIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.2.2.1.1" access="read-only">2</index>
									<instance instanceIndex="2" instanceName="ifIndex" instanceValue="2">2</instance>
									<ifIndex oid="1.3.6.1.2.1.2.2.1.1.2" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[A unique value, greater than zero, for each interface.  It is recommended that values are assigned contiguously starting from 1.  The value for each interface sub-layer must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.]]></description>
										<value>2</value>
									</ifIndex>
									<ifDescr oid="1.3.6.1.2.1.2.2.1.2.2" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[A textual string containing information about the interface.  This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.]]></description>
										<value>eth0</value>
									</ifDescr>
									<ifType oid="1.3.6.1.2.1.2.2.1.3.2" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The type of interface.  Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA), through updating the syntax of the IANAifType textual convention.]]></description>
										<value>6</value>
									</ifType>
									<ifMtu oid="1.3.6.1.2.1.2.2.1.4.2" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The size of the largest packet which can be sent/received on the interface, specified in octets.  For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.]]></description>
										<value>1500</value>
									</ifMtu>
									<ifSpeed oid="1.3.6.1.2.1.2.2.1.5.2" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[An estimate of the interface's current bandwidth in bits per second.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.  If the bandwidth of the interface is greater than the maximum value reportable by this object then this object should report its maximum value (4,294,967,295) and ifHighSpeed must be used to report the interace's speed.  For a sub-layer which has no concept of bandwidth, this object should be zero.]]></description>
										<value>10000000</value>
									</ifSpeed>
									<ifPhysAddress oid="1.3.6.1.2.1.2.2.1.6.2" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[The interface's address at its protocol sub-layer.  For example, for an 802.x interface, this object normally contains a MAC address.  The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object.  For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.]]></description>
										<value>64:70:02:cd:74:cc</value>
									</ifPhysAddress>
									<ifAdminStatus oid="1.3.6.1.2.1.2.2.1.7.2" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
										<description><![CDATA[The desired state of the interface.  The testing(3) state indicates that no operational packets can be passed.  When a managed system initializes, all interfaces start with ifAdminStatus in the down(2) state.  As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).]]></description>
										<value>1</value>
									</ifAdminStatus>
									<ifOperStatus oid="1.3.6.1.2.1.2.2.1.8.2" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The current operational state of the interface.  The testing(3) state indicates that no operational packets can be passed.  If ifAdminStatus is down(2) then ifOperStatus should be down(2).  If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection); it should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(6) state if the interface has missing (typically, hardware) components.]]></description>
										<value>1</value>
									</ifOperStatus>
									<ifLastChange oid="1.3.6.1.2.1.2.2.1.9.2" primitiveSyntax="INTEGER" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.]]></description>
										<value>0:00:00.00</value>
									</ifLastChange>
									<ifInOctets oid="1.3.6.1.2.1.2.2.1.10.2" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets received on the interface,   including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>1230882337</value>
									</ifInOctets>
									<ifInUcastPkts oid="1.3.6.1.2.1.2.2.1.11.2" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were not addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>2916104</value>
									</ifInUcastPkts>
									<ifInNUcastPkts oid="1.3.6.1.2.1.2.2.1.12.2" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifInMulticastPkts and ifInBroadcastPkts.]]></description>
										<value>0</value>
									</ifInNUcastPkts>
									<ifInDiscards oid="1.3.6.1.2.1.2.2.1.13.2" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent   their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>1</value>
									</ifInDiscards>
									<ifInErrors oid="1.3.6.1.2.1.2.2.1.14.2" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character- oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInErrors>
									<ifInUnknownProtos oid="1.3.6.1.2.1.2.2.1.15.2" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of packets received via the interface which were discarded because of an unknown or unsupported protocol.  For character-oriented or fixed-length interfaces that support protocol multiplexing the number of transmission units received via the interface which were discarded because of an unknown or unsupported protocol.  For any interface that does not support protocol multiplexing, this counter will always be 0.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUnknownProtos>
									<ifOutOctets oid="1.3.6.1.2.1.2.2.1.16.2" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets transmitted out of the interface, including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>1018420238</value>
									</ifOutOctets>
									<ifOutUcastPkts oid="1.3.6.1.2.1.2.2.1.17.2" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were not addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>2722264</value>
									</ifOutUcastPkts>
									<ifOutNUcastPkts oid="1.3.6.1.2.1.2.2.1.18.2" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifOutMulticastPkts and ifOutBroadcastPkts.]]></description>
										<value>0</value>
									</ifOutNUcastPkts>
									<ifOutDiscards oid="1.3.6.1.2.1.2.2.1.19.2" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutDiscards>
									<ifOutErrors oid="1.3.6.1.2.1.2.2.1.20.2" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutErrors>
									<ifOutQLen oid="1.3.6.1.2.1.2.2.1.21.2" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The length of the output packet queue (in packets).]]></description>
										<value>0</value>
									</ifOutQLen>
									<ifSpecific oid="1.3.6.1.2.1.2.2.1.22.2" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
										<description><![CDATA[A reference to MIB definitions specific to the particular media being used to realize the interface.  It is   recommended that this value point to an instance of a MIB object in the media-specific MIB, i.e., that this object have the semantics associated with the InstancePointer textual convention defined in RFC 2579.  In fact, it is recommended that the media-specific MIB specify what value ifSpecific should/can take for values of ifType.  If no MIB definitions specific to the particular media are available, the value should be set to the OBJECT IDENTIFIER { 0 0 }.]]></description>
										<value>0.0</value>
									</ifSpecific>

								</ifEntry>
								<ifEntry oid="1.3.6.1.2.1.2.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
									<description><![CDATA[An entry containing management information applicable to a particular interface.]]></description>
									<index name="ifIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.2.2.1.1" access="read-only">4</index>
									<instance instanceIndex="3" instanceName="ifIndex" instanceValue="4">4</instance>
									<ifIndex oid="1.3.6.1.2.1.2.2.1.1.4" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[A unique value, greater than zero, for each interface.  It is recommended that values are assigned contiguously starting from 1.  The value for each interface sub-layer must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.]]></description>
										<value>4</value>
									</ifIndex>
									<ifDescr oid="1.3.6.1.2.1.2.2.1.2.4" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[A textual string containing information about the interface.  This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.]]></description>
										<value>sit0</value>
									</ifDescr>
									<ifType oid="1.3.6.1.2.1.2.2.1.3.4" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The type of interface.  Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA), through updating the syntax of the IANAifType textual convention.]]></description>
										<value>131</value>
									</ifType>
									<ifMtu oid="1.3.6.1.2.1.2.2.1.4.4" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The size of the largest packet which can be sent/received on the interface, specified in octets.  For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.]]></description>
										<value>1480</value>
									</ifMtu>
									<ifSpeed oid="1.3.6.1.2.1.2.2.1.5.4" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[An estimate of the interface's current bandwidth in bits per second.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.  If the bandwidth of the interface is greater than the maximum value reportable by this object then this object should report its maximum value (4,294,967,295) and ifHighSpeed must be used to report the interace's speed.  For a sub-layer which has no concept of bandwidth, this object should be zero.]]></description>
										<value>0</value>
									</ifSpeed>
									<ifPhysAddress oid="1.3.6.1.2.1.2.2.1.6.4" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[The interface's address at its protocol sub-layer.  For example, for an 802.x interface, this object normally contains a MAC address.  The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object.  For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.]]></description>
										<value></value>
									</ifPhysAddress>
									<ifAdminStatus oid="1.3.6.1.2.1.2.2.1.7.4" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
										<description><![CDATA[The desired state of the interface.  The testing(3) state indicates that no operational packets can be passed.  When a managed system initializes, all interfaces start with ifAdminStatus in the down(2) state.  As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).]]></description>
										<value>2</value>
									</ifAdminStatus>
									<ifOperStatus oid="1.3.6.1.2.1.2.2.1.8.4" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The current operational state of the interface.  The testing(3) state indicates that no operational packets can be passed.  If ifAdminStatus is down(2) then ifOperStatus should be down(2).  If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection); it should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(6) state if the interface has missing (typically, hardware) components.]]></description>
										<value>2</value>
									</ifOperStatus>
									<ifLastChange oid="1.3.6.1.2.1.2.2.1.9.4" primitiveSyntax="INTEGER" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.]]></description>
										<value>0:00:00.00</value>
									</ifLastChange>
									<ifInOctets oid="1.3.6.1.2.1.2.2.1.10.4" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets received on the interface,   including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInOctets>
									<ifInUcastPkts oid="1.3.6.1.2.1.2.2.1.11.4" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were not addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUcastPkts>
									<ifInNUcastPkts oid="1.3.6.1.2.1.2.2.1.12.4" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifInMulticastPkts and ifInBroadcastPkts.]]></description>
										<value>0</value>
									</ifInNUcastPkts>
									<ifInDiscards oid="1.3.6.1.2.1.2.2.1.13.4" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent   their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInDiscards>
									<ifInErrors oid="1.3.6.1.2.1.2.2.1.14.4" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character- oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInErrors>
									<ifInUnknownProtos oid="1.3.6.1.2.1.2.2.1.15.4" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of packets received via the interface which were discarded because of an unknown or unsupported protocol.  For character-oriented or fixed-length interfaces that support protocol multiplexing the number of transmission units received via the interface which were discarded because of an unknown or unsupported protocol.  For any interface that does not support protocol multiplexing, this counter will always be 0.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUnknownProtos>
									<ifOutOctets oid="1.3.6.1.2.1.2.2.1.16.4" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets transmitted out of the interface, including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutOctets>
									<ifOutUcastPkts oid="1.3.6.1.2.1.2.2.1.17.4" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were not addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutUcastPkts>
									<ifOutNUcastPkts oid="1.3.6.1.2.1.2.2.1.18.4" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifOutMulticastPkts and ifOutBroadcastPkts.]]></description>
										<value>0</value>
									</ifOutNUcastPkts>
									<ifOutDiscards oid="1.3.6.1.2.1.2.2.1.19.4" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutDiscards>
									<ifOutErrors oid="1.3.6.1.2.1.2.2.1.20.4" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutErrors>
									<ifOutQLen oid="1.3.6.1.2.1.2.2.1.21.4" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The length of the output packet queue (in packets).]]></description>
										<value>0</value>
									</ifOutQLen>
									<ifSpecific oid="1.3.6.1.2.1.2.2.1.22.4" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
										<description><![CDATA[A reference to MIB definitions specific to the particular media being used to realize the interface.  It is   recommended that this value point to an instance of a MIB object in the media-specific MIB, i.e., that this object have the semantics associated with the InstancePointer textual convention defined in RFC 2579.  In fact, it is recommended that the media-specific MIB specify what value ifSpecific should/can take for values of ifType.  If no MIB definitions specific to the particular media are available, the value should be set to the OBJECT IDENTIFIER { 0 0 }.]]></description>
										<value>0.0</value>
									</ifSpecific>

								</ifEntry>
								<ifEntry oid="1.3.6.1.2.1.2.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
									<description><![CDATA[An entry containing management information applicable to a particular interface.]]></description>
									<index name="ifIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.2.2.1.1" access="read-only">5</index>
									<instance instanceIndex="4" instanceName="ifIndex" instanceValue="5">5</instance>
									<ifIndex oid="1.3.6.1.2.1.2.2.1.1.5" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[A unique value, greater than zero, for each interface.  It is recommended that values are assigned contiguously starting from 1.  The value for each interface sub-layer must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.]]></description>
										<value>5</value>
									</ifIndex>
									<ifDescr oid="1.3.6.1.2.1.2.2.1.2.5" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[A textual string containing information about the interface.  This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.]]></description>
										<value>br-wifi</value>
									</ifDescr>
									<ifType oid="1.3.6.1.2.1.2.2.1.3.5" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The type of interface.  Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA), through updating the syntax of the IANAifType textual convention.]]></description>
										<value>6</value>
									</ifType>
									<ifMtu oid="1.3.6.1.2.1.2.2.1.4.5" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The size of the largest packet which can be sent/received on the interface, specified in octets.  For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.]]></description>
										<value>1500</value>
									</ifMtu>
									<ifSpeed oid="1.3.6.1.2.1.2.2.1.5.5" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[An estimate of the interface's current bandwidth in bits per second.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.  If the bandwidth of the interface is greater than the maximum value reportable by this object then this object should report its maximum value (4,294,967,295) and ifHighSpeed must be used to report the interace's speed.  For a sub-layer which has no concept of bandwidth, this object should be zero.]]></description>
										<value>10000000</value>
									</ifSpeed>
									<ifPhysAddress oid="1.3.6.1.2.1.2.2.1.6.5" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[The interface's address at its protocol sub-layer.  For example, for an 802.x interface, this object normally contains a MAC address.  The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object.  For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.]]></description>
										<value>64:70:02:cd:74:cc</value>
									</ifPhysAddress>
									<ifAdminStatus oid="1.3.6.1.2.1.2.2.1.7.5" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
										<description><![CDATA[The desired state of the interface.  The testing(3) state indicates that no operational packets can be passed.  When a managed system initializes, all interfaces start with ifAdminStatus in the down(2) state.  As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).]]></description>
										<value>1</value>
									</ifAdminStatus>
									<ifOperStatus oid="1.3.6.1.2.1.2.2.1.8.5" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The current operational state of the interface.  The testing(3) state indicates that no operational packets can be passed.  If ifAdminStatus is down(2) then ifOperStatus should be down(2).  If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection); it should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(6) state if the interface has missing (typically, hardware) components.]]></description>
										<value>1</value>
									</ifOperStatus>
									<ifLastChange oid="1.3.6.1.2.1.2.2.1.9.5" primitiveSyntax="INTEGER" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.]]></description>
										<value>0:00:00.00</value>
									</ifLastChange>
									<ifInOctets oid="1.3.6.1.2.1.2.2.1.10.5" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets received on the interface,   including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>42838211</value>
									</ifInOctets>
									<ifInUcastPkts oid="1.3.6.1.2.1.2.2.1.11.5" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were not addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>190867</value>
									</ifInUcastPkts>
									<ifInNUcastPkts oid="1.3.6.1.2.1.2.2.1.12.5" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifInMulticastPkts and ifInBroadcastPkts.]]></description>
										<value>0</value>
									</ifInNUcastPkts>
									<ifInDiscards oid="1.3.6.1.2.1.2.2.1.13.5" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent   their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInDiscards>
									<ifInErrors oid="1.3.6.1.2.1.2.2.1.14.5" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character- oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInErrors>
									<ifInUnknownProtos oid="1.3.6.1.2.1.2.2.1.15.5" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of packets received via the interface which were discarded because of an unknown or unsupported protocol.  For character-oriented or fixed-length interfaces that support protocol multiplexing the number of transmission units received via the interface which were discarded because of an unknown or unsupported protocol.  For any interface that does not support protocol multiplexing, this counter will always be 0.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUnknownProtos>
									<ifOutOctets oid="1.3.6.1.2.1.2.2.1.16.5" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets transmitted out of the interface, including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>262947137</value>
									</ifOutOctets>
									<ifOutUcastPkts oid="1.3.6.1.2.1.2.2.1.17.5" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were not addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>251527</value>
									</ifOutUcastPkts>
									<ifOutNUcastPkts oid="1.3.6.1.2.1.2.2.1.18.5" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifOutMulticastPkts and ifOutBroadcastPkts.]]></description>
										<value>0</value>
									</ifOutNUcastPkts>
									<ifOutDiscards oid="1.3.6.1.2.1.2.2.1.19.5" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutDiscards>
									<ifOutErrors oid="1.3.6.1.2.1.2.2.1.20.5" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutErrors>
									<ifOutQLen oid="1.3.6.1.2.1.2.2.1.21.5" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The length of the output packet queue (in packets).]]></description>
										<value>0</value>
									</ifOutQLen>
									<ifSpecific oid="1.3.6.1.2.1.2.2.1.22.5" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
										<description><![CDATA[A reference to MIB definitions specific to the particular media being used to realize the interface.  It is   recommended that this value point to an instance of a MIB object in the media-specific MIB, i.e., that this object have the semantics associated with the InstancePointer textual convention defined in RFC 2579.  In fact, it is recommended that the media-specific MIB specify what value ifSpecific should/can take for values of ifType.  If no MIB definitions specific to the particular media are available, the value should be set to the OBJECT IDENTIFIER { 0 0 }.]]></description>
										<value>0.0</value>
									</ifSpecific>

								</ifEntry>
								<ifEntry oid="1.3.6.1.2.1.2.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
									<description><![CDATA[An entry containing management information applicable to a particular interface.]]></description>
									<index name="ifIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.2.2.1.1" access="read-only">6</index>
									<instance instanceIndex="5" instanceName="ifIndex" instanceValue="6">6</instance>
									<ifIndex oid="1.3.6.1.2.1.2.2.1.1.6" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[A unique value, greater than zero, for each interface.  It is recommended that values are assigned contiguously starting from 1.  The value for each interface sub-layer must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.]]></description>
										<value>6</value>
									</ifIndex>
									<ifDescr oid="1.3.6.1.2.1.2.2.1.2.6" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[A textual string containing information about the interface.  This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.]]></description>
										<value>eth0.19</value>
									</ifDescr>
									<ifType oid="1.3.6.1.2.1.2.2.1.3.6" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The type of interface.  Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA), through updating the syntax of the IANAifType textual convention.]]></description>
										<value>6</value>
									</ifType>
									<ifMtu oid="1.3.6.1.2.1.2.2.1.4.6" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The size of the largest packet which can be sent/received on the interface, specified in octets.  For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.]]></description>
										<value>1500</value>
									</ifMtu>
									<ifSpeed oid="1.3.6.1.2.1.2.2.1.5.6" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[An estimate of the interface's current bandwidth in bits per second.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.  If the bandwidth of the interface is greater than the maximum value reportable by this object then this object should report its maximum value (4,294,967,295) and ifHighSpeed must be used to report the interace's speed.  For a sub-layer which has no concept of bandwidth, this object should be zero.]]></description>
										<value>10000000</value>
									</ifSpeed>
									<ifPhysAddress oid="1.3.6.1.2.1.2.2.1.6.6" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[The interface's address at its protocol sub-layer.  For example, for an 802.x interface, this object normally contains a MAC address.  The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object.  For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.]]></description>
										<value>64:70:02:cd:74:cc</value>
									</ifPhysAddress>
									<ifAdminStatus oid="1.3.6.1.2.1.2.2.1.7.6" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
										<description><![CDATA[The desired state of the interface.  The testing(3) state indicates that no operational packets can be passed.  When a managed system initializes, all interfaces start with ifAdminStatus in the down(2) state.  As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).]]></description>
										<value>1</value>
									</ifAdminStatus>
									<ifOperStatus oid="1.3.6.1.2.1.2.2.1.8.6" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The current operational state of the interface.  The testing(3) state indicates that no operational packets can be passed.  If ifAdminStatus is down(2) then ifOperStatus should be down(2).  If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection); it should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(6) state if the interface has missing (typically, hardware) components.]]></description>
										<value>1</value>
									</ifOperStatus>
									<ifLastChange oid="1.3.6.1.2.1.2.2.1.9.6" primitiveSyntax="INTEGER" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.]]></description>
										<value>0:00:00.00</value>
									</ifLastChange>
									<ifInOctets oid="1.3.6.1.2.1.2.2.1.10.6" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets received on the interface,   including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInOctets>
									<ifInUcastPkts oid="1.3.6.1.2.1.2.2.1.11.6" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were not addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUcastPkts>
									<ifInNUcastPkts oid="1.3.6.1.2.1.2.2.1.12.6" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifInMulticastPkts and ifInBroadcastPkts.]]></description>
										<value>0</value>
									</ifInNUcastPkts>
									<ifInDiscards oid="1.3.6.1.2.1.2.2.1.13.6" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent   their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInDiscards>
									<ifInErrors oid="1.3.6.1.2.1.2.2.1.14.6" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character- oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInErrors>
									<ifInUnknownProtos oid="1.3.6.1.2.1.2.2.1.15.6" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of packets received via the interface which were discarded because of an unknown or unsupported protocol.  For character-oriented or fixed-length interfaces that support protocol multiplexing the number of transmission units received via the interface which were discarded because of an unknown or unsupported protocol.  For any interface that does not support protocol multiplexing, this counter will always be 0.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUnknownProtos>
									<ifOutOctets oid="1.3.6.1.2.1.2.2.1.16.6" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets transmitted out of the interface, including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>814095</value>
									</ifOutOctets>
									<ifOutUcastPkts oid="1.3.6.1.2.1.2.2.1.17.6" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were not addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>12361</value>
									</ifOutUcastPkts>
									<ifOutNUcastPkts oid="1.3.6.1.2.1.2.2.1.18.6" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifOutMulticastPkts and ifOutBroadcastPkts.]]></description>
										<value>0</value>
									</ifOutNUcastPkts>
									<ifOutDiscards oid="1.3.6.1.2.1.2.2.1.19.6" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutDiscards>
									<ifOutErrors oid="1.3.6.1.2.1.2.2.1.20.6" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutErrors>
									<ifOutQLen oid="1.3.6.1.2.1.2.2.1.21.6" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The length of the output packet queue (in packets).]]></description>
										<value>0</value>
									</ifOutQLen>
									<ifSpecific oid="1.3.6.1.2.1.2.2.1.22.6" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
										<description><![CDATA[A reference to MIB definitions specific to the particular media being used to realize the interface.  It is   recommended that this value point to an instance of a MIB object in the media-specific MIB, i.e., that this object have the semantics associated with the InstancePointer textual convention defined in RFC 2579.  In fact, it is recommended that the media-specific MIB specify what value ifSpecific should/can take for values of ifType.  If no MIB definitions specific to the particular media are available, the value should be set to the OBJECT IDENTIFIER { 0 0 }.]]></description>
										<value>0.0</value>
									</ifSpecific>

								</ifEntry>
								<ifEntry oid="1.3.6.1.2.1.2.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
									<description><![CDATA[An entry containing management information applicable to a particular interface.]]></description>
									<index name="ifIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.2.2.1.1" access="read-only">7</index>
									<instance instanceIndex="6" instanceName="ifIndex" instanceValue="7">7</instance>
									<ifIndex oid="1.3.6.1.2.1.2.2.1.1.7" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[A unique value, greater than zero, for each interface.  It is recommended that values are assigned contiguously starting from 1.  The value for each interface sub-layer must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.]]></description>
										<value>7</value>
									</ifIndex>
									<ifDescr oid="1.3.6.1.2.1.2.2.1.2.7" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[A textual string containing information about the interface.  This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.]]></description>
										<value>eth0.20</value>
									</ifDescr>
									<ifType oid="1.3.6.1.2.1.2.2.1.3.7" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The type of interface.  Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA), through updating the syntax of the IANAifType textual convention.]]></description>
										<value>6</value>
									</ifType>
									<ifMtu oid="1.3.6.1.2.1.2.2.1.4.7" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The size of the largest packet which can be sent/received on the interface, specified in octets.  For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.]]></description>
										<value>1500</value>
									</ifMtu>
									<ifSpeed oid="1.3.6.1.2.1.2.2.1.5.7" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[An estimate of the interface's current bandwidth in bits per second.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.  If the bandwidth of the interface is greater than the maximum value reportable by this object then this object should report its maximum value (4,294,967,295) and ifHighSpeed must be used to report the interace's speed.  For a sub-layer which has no concept of bandwidth, this object should be zero.]]></description>
										<value>10000000</value>
									</ifSpeed>
									<ifPhysAddress oid="1.3.6.1.2.1.2.2.1.6.7" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[The interface's address at its protocol sub-layer.  For example, for an 802.x interface, this object normally contains a MAC address.  The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object.  For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.]]></description>
										<value>64:70:02:cd:74:cc</value>
									</ifPhysAddress>
									<ifAdminStatus oid="1.3.6.1.2.1.2.2.1.7.7" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
										<description><![CDATA[The desired state of the interface.  The testing(3) state indicates that no operational packets can be passed.  When a managed system initializes, all interfaces start with ifAdminStatus in the down(2) state.  As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).]]></description>
										<value>1</value>
									</ifAdminStatus>
									<ifOperStatus oid="1.3.6.1.2.1.2.2.1.8.7" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The current operational state of the interface.  The testing(3) state indicates that no operational packets can be passed.  If ifAdminStatus is down(2) then ifOperStatus should be down(2).  If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection); it should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(6) state if the interface has missing (typically, hardware) components.]]></description>
										<value>1</value>
									</ifOperStatus>
									<ifLastChange oid="1.3.6.1.2.1.2.2.1.9.7" primitiveSyntax="INTEGER" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.]]></description>
										<value>0:00:00.00</value>
									</ifLastChange>
									<ifInOctets oid="1.3.6.1.2.1.2.2.1.10.7" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets received on the interface,   including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInOctets>
									<ifInUcastPkts oid="1.3.6.1.2.1.2.2.1.11.7" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were not addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUcastPkts>
									<ifInNUcastPkts oid="1.3.6.1.2.1.2.2.1.12.7" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifInMulticastPkts and ifInBroadcastPkts.]]></description>
										<value>0</value>
									</ifInNUcastPkts>
									<ifInDiscards oid="1.3.6.1.2.1.2.2.1.13.7" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent   their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInDiscards>
									<ifInErrors oid="1.3.6.1.2.1.2.2.1.14.7" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character- oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInErrors>
									<ifInUnknownProtos oid="1.3.6.1.2.1.2.2.1.15.7" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of packets received via the interface which were discarded because of an unknown or unsupported protocol.  For character-oriented or fixed-length interfaces that support protocol multiplexing the number of transmission units received via the interface which were discarded because of an unknown or unsupported protocol.  For any interface that does not support protocol multiplexing, this counter will always be 0.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUnknownProtos>
									<ifOutOctets oid="1.3.6.1.2.1.2.2.1.16.7" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets transmitted out of the interface, including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>688</value>
									</ifOutOctets>
									<ifOutUcastPkts oid="1.3.6.1.2.1.2.2.1.17.7" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were not addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>8</value>
									</ifOutUcastPkts>
									<ifOutNUcastPkts oid="1.3.6.1.2.1.2.2.1.18.7" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifOutMulticastPkts and ifOutBroadcastPkts.]]></description>
										<value>0</value>
									</ifOutNUcastPkts>
									<ifOutDiscards oid="1.3.6.1.2.1.2.2.1.19.7" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutDiscards>
									<ifOutErrors oid="1.3.6.1.2.1.2.2.1.20.7" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutErrors>
									<ifOutQLen oid="1.3.6.1.2.1.2.2.1.21.7" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The length of the output packet queue (in packets).]]></description>
										<value>0</value>
									</ifOutQLen>
									<ifSpecific oid="1.3.6.1.2.1.2.2.1.22.7" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
										<description><![CDATA[A reference to MIB definitions specific to the particular media being used to realize the interface.  It is   recommended that this value point to an instance of a MIB object in the media-specific MIB, i.e., that this object have the semantics associated with the InstancePointer textual convention defined in RFC 2579.  In fact, it is recommended that the media-specific MIB specify what value ifSpecific should/can take for values of ifType.  If no MIB definitions specific to the particular media are available, the value should be set to the OBJECT IDENTIFIER { 0 0 }.]]></description>
										<value>0.0</value>
									</ifSpecific>

								</ifEntry>
								<ifEntry oid="1.3.6.1.2.1.2.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
									<description><![CDATA[An entry containing management information applicable to a particular interface.]]></description>
									<index name="ifIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.2.2.1.1" access="read-only">8</index>
									<instance instanceIndex="7" instanceName="ifIndex" instanceValue="8">8</instance>
									<ifIndex oid="1.3.6.1.2.1.2.2.1.1.8" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[A unique value, greater than zero, for each interface.  It is recommended that values are assigned contiguously starting from 1.  The value for each interface sub-layer must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.]]></description>
										<value>8</value>
									</ifIndex>
									<ifDescr oid="1.3.6.1.2.1.2.2.1.2.8" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[A textual string containing information about the interface.  This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.]]></description>
										<value>eth0.18</value>
									</ifDescr>
									<ifType oid="1.3.6.1.2.1.2.2.1.3.8" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The type of interface.  Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA), through updating the syntax of the IANAifType textual convention.]]></description>
										<value>6</value>
									</ifType>
									<ifMtu oid="1.3.6.1.2.1.2.2.1.4.8" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The size of the largest packet which can be sent/received on the interface, specified in octets.  For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.]]></description>
										<value>1500</value>
									</ifMtu>
									<ifSpeed oid="1.3.6.1.2.1.2.2.1.5.8" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[An estimate of the interface's current bandwidth in bits per second.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.  If the bandwidth of the interface is greater than the maximum value reportable by this object then this object should report its maximum value (4,294,967,295) and ifHighSpeed must be used to report the interace's speed.  For a sub-layer which has no concept of bandwidth, this object should be zero.]]></description>
										<value>10000000</value>
									</ifSpeed>
									<ifPhysAddress oid="1.3.6.1.2.1.2.2.1.6.8" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[The interface's address at its protocol sub-layer.  For example, for an 802.x interface, this object normally contains a MAC address.  The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object.  For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.]]></description>
										<value>64:70:02:cd:74:cc</value>
									</ifPhysAddress>
									<ifAdminStatus oid="1.3.6.1.2.1.2.2.1.7.8" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
										<description><![CDATA[The desired state of the interface.  The testing(3) state indicates that no operational packets can be passed.  When a managed system initializes, all interfaces start with ifAdminStatus in the down(2) state.  As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).]]></description>
										<value>1</value>
									</ifAdminStatus>
									<ifOperStatus oid="1.3.6.1.2.1.2.2.1.8.8" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The current operational state of the interface.  The testing(3) state indicates that no operational packets can be passed.  If ifAdminStatus is down(2) then ifOperStatus should be down(2).  If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection); it should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(6) state if the interface has missing (typically, hardware) components.]]></description>
										<value>1</value>
									</ifOperStatus>
									<ifLastChange oid="1.3.6.1.2.1.2.2.1.9.8" primitiveSyntax="INTEGER" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.]]></description>
										<value>0:00:00.00</value>
									</ifLastChange>
									<ifInOctets oid="1.3.6.1.2.1.2.2.1.10.8" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets received on the interface,   including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>60210</value>
									</ifInOctets>
									<ifInUcastPkts oid="1.3.6.1.2.1.2.2.1.11.8" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were not addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>1404</value>
									</ifInUcastPkts>
									<ifInNUcastPkts oid="1.3.6.1.2.1.2.2.1.12.8" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifInMulticastPkts and ifInBroadcastPkts.]]></description>
										<value>14</value>
									</ifInNUcastPkts>
									<ifInDiscards oid="1.3.6.1.2.1.2.2.1.13.8" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent   their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInDiscards>
									<ifInErrors oid="1.3.6.1.2.1.2.2.1.14.8" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character- oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInErrors>
									<ifInUnknownProtos oid="1.3.6.1.2.1.2.2.1.15.8" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of packets received via the interface which were discarded because of an unknown or unsupported protocol.  For character-oriented or fixed-length interfaces that support protocol multiplexing the number of transmission units received via the interface which were discarded because of an unknown or unsupported protocol.  For any interface that does not support protocol multiplexing, this counter will always be 0.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUnknownProtos>
									<ifOutOctets oid="1.3.6.1.2.1.2.2.1.16.8" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets transmitted out of the interface, including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>806</value>
									</ifOutOctets>
									<ifOutUcastPkts oid="1.3.6.1.2.1.2.2.1.17.8" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were not addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>9</value>
									</ifOutUcastPkts>
									<ifOutNUcastPkts oid="1.3.6.1.2.1.2.2.1.18.8" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifOutMulticastPkts and ifOutBroadcastPkts.]]></description>
										<value>0</value>
									</ifOutNUcastPkts>
									<ifOutDiscards oid="1.3.6.1.2.1.2.2.1.19.8" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutDiscards>
									<ifOutErrors oid="1.3.6.1.2.1.2.2.1.20.8" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutErrors>
									<ifOutQLen oid="1.3.6.1.2.1.2.2.1.21.8" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The length of the output packet queue (in packets).]]></description>
										<value>0</value>
									</ifOutQLen>
									<ifSpecific oid="1.3.6.1.2.1.2.2.1.22.8" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
										<description><![CDATA[A reference to MIB definitions specific to the particular media being used to realize the interface.  It is   recommended that this value point to an instance of a MIB object in the media-specific MIB, i.e., that this object have the semantics associated with the InstancePointer textual convention defined in RFC 2579.  In fact, it is recommended that the media-specific MIB specify what value ifSpecific should/can take for values of ifType.  If no MIB definitions specific to the particular media are available, the value should be set to the OBJECT IDENTIFIER { 0 0 }.]]></description>
										<value>0.0</value>
									</ifSpecific>

								</ifEntry>
								<ifEntry oid="1.3.6.1.2.1.2.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
									<description><![CDATA[An entry containing management information applicable to a particular interface.]]></description>
									<index name="ifIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.2.2.1.1" access="read-only">9</index>
									<instance instanceIndex="8" instanceName="ifIndex" instanceValue="9">9</instance>
									<ifIndex oid="1.3.6.1.2.1.2.2.1.1.9" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[A unique value, greater than zero, for each interface.  It is recommended that values are assigned contiguously starting from 1.  The value for each interface sub-layer must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.]]></description>
										<value>9</value>
									</ifIndex>
									<ifDescr oid="1.3.6.1.2.1.2.2.1.2.9" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[A textual string containing information about the interface.  This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.]]></description>
										<value>eth0.17</value>
									</ifDescr>
									<ifType oid="1.3.6.1.2.1.2.2.1.3.9" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The type of interface.  Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA), through updating the syntax of the IANAifType textual convention.]]></description>
										<value>6</value>
									</ifType>
									<ifMtu oid="1.3.6.1.2.1.2.2.1.4.9" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The size of the largest packet which can be sent/received on the interface, specified in octets.  For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.]]></description>
										<value>1500</value>
									</ifMtu>
									<ifSpeed oid="1.3.6.1.2.1.2.2.1.5.9" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[An estimate of the interface's current bandwidth in bits per second.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.  If the bandwidth of the interface is greater than the maximum value reportable by this object then this object should report its maximum value (4,294,967,295) and ifHighSpeed must be used to report the interace's speed.  For a sub-layer which has no concept of bandwidth, this object should be zero.]]></description>
										<value>10000000</value>
									</ifSpeed>
									<ifPhysAddress oid="1.3.6.1.2.1.2.2.1.6.9" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[The interface's address at its protocol sub-layer.  For example, for an 802.x interface, this object normally contains a MAC address.  The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object.  For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.]]></description>
										<value>64:70:02:cd:74:cc</value>
									</ifPhysAddress>
									<ifAdminStatus oid="1.3.6.1.2.1.2.2.1.7.9" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
										<description><![CDATA[The desired state of the interface.  The testing(3) state indicates that no operational packets can be passed.  When a managed system initializes, all interfaces start with ifAdminStatus in the down(2) state.  As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).]]></description>
										<value>1</value>
									</ifAdminStatus>
									<ifOperStatus oid="1.3.6.1.2.1.2.2.1.8.9" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The current operational state of the interface.  The testing(3) state indicates that no operational packets can be passed.  If ifAdminStatus is down(2) then ifOperStatus should be down(2).  If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection); it should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(6) state if the interface has missing (typically, hardware) components.]]></description>
										<value>1</value>
									</ifOperStatus>
									<ifLastChange oid="1.3.6.1.2.1.2.2.1.9.9" primitiveSyntax="INTEGER" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.]]></description>
										<value>0:00:00.00</value>
									</ifLastChange>
									<ifInOctets oid="1.3.6.1.2.1.2.2.1.10.9" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets received on the interface,   including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>257641075</value>
									</ifInOctets>
									<ifInUcastPkts oid="1.3.6.1.2.1.2.2.1.11.9" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were not addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>953192</value>
									</ifInUcastPkts>
									<ifInNUcastPkts oid="1.3.6.1.2.1.2.2.1.12.9" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifInMulticastPkts and ifInBroadcastPkts.]]></description>
										<value>26632</value>
									</ifInNUcastPkts>
									<ifInDiscards oid="1.3.6.1.2.1.2.2.1.13.9" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent   their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>26622</value>
									</ifInDiscards>
									<ifInErrors oid="1.3.6.1.2.1.2.2.1.14.9" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character- oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInErrors>
									<ifInUnknownProtos oid="1.3.6.1.2.1.2.2.1.15.9" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of packets received via the interface which were discarded because of an unknown or unsupported protocol.  For character-oriented or fixed-length interfaces that support protocol multiplexing the number of transmission units received via the interface which were discarded because of an unknown or unsupported protocol.  For any interface that does not support protocol multiplexing, this counter will always be 0.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUnknownProtos>
									<ifOutOctets oid="1.3.6.1.2.1.2.2.1.16.9" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets transmitted out of the interface, including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>606802034</value>
									</ifOutOctets>
									<ifOutUcastPkts oid="1.3.6.1.2.1.2.2.1.17.9" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were not addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>916302</value>
									</ifOutUcastPkts>
									<ifOutNUcastPkts oid="1.3.6.1.2.1.2.2.1.18.9" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifOutMulticastPkts and ifOutBroadcastPkts.]]></description>
										<value>0</value>
									</ifOutNUcastPkts>
									<ifOutDiscards oid="1.3.6.1.2.1.2.2.1.19.9" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutDiscards>
									<ifOutErrors oid="1.3.6.1.2.1.2.2.1.20.9" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutErrors>
									<ifOutQLen oid="1.3.6.1.2.1.2.2.1.21.9" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The length of the output packet queue (in packets).]]></description>
										<value>0</value>
									</ifOutQLen>
									<ifSpecific oid="1.3.6.1.2.1.2.2.1.22.9" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
										<description><![CDATA[A reference to MIB definitions specific to the particular media being used to realize the interface.  It is   recommended that this value point to an instance of a MIB object in the media-specific MIB, i.e., that this object have the semantics associated with the InstancePointer textual convention defined in RFC 2579.  In fact, it is recommended that the media-specific MIB specify what value ifSpecific should/can take for values of ifType.  If no MIB definitions specific to the particular media are available, the value should be set to the OBJECT IDENTIFIER { 0 0 }.]]></description>
										<value>0.0</value>
									</ifSpecific>

								</ifEntry>
								<ifEntry oid="1.3.6.1.2.1.2.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
									<description><![CDATA[An entry containing management information applicable to a particular interface.]]></description>
									<index name="ifIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.2.2.1.1" access="read-only">10</index>
									<instance instanceIndex="9" instanceName="ifIndex" instanceValue="10">10</instance>
									<ifIndex oid="1.3.6.1.2.1.2.2.1.1.10" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[A unique value, greater than zero, for each interface.  It is recommended that values are assigned contiguously starting from 1.  The value for each interface sub-layer must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.]]></description>
										<value>10</value>
									</ifIndex>
									<ifDescr oid="1.3.6.1.2.1.2.2.1.2.10" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[A textual string containing information about the interface.  This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.]]></description>
										<value>eth0.2</value>
									</ifDescr>
									<ifType oid="1.3.6.1.2.1.2.2.1.3.10" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The type of interface.  Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA), through updating the syntax of the IANAifType textual convention.]]></description>
										<value>6</value>
									</ifType>
									<ifMtu oid="1.3.6.1.2.1.2.2.1.4.10" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The size of the largest packet which can be sent/received on the interface, specified in octets.  For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.]]></description>
										<value>1500</value>
									</ifMtu>
									<ifSpeed oid="1.3.6.1.2.1.2.2.1.5.10" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[An estimate of the interface's current bandwidth in bits per second.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.  If the bandwidth of the interface is greater than the maximum value reportable by this object then this object should report its maximum value (4,294,967,295) and ifHighSpeed must be used to report the interace's speed.  For a sub-layer which has no concept of bandwidth, this object should be zero.]]></description>
										<value>10000000</value>
									</ifSpeed>
									<ifPhysAddress oid="1.3.6.1.2.1.2.2.1.6.10" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[The interface's address at its protocol sub-layer.  For example, for an 802.x interface, this object normally contains a MAC address.  The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object.  For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.]]></description>
										<value>64:70:02:cd:74:cc</value>
									</ifPhysAddress>
									<ifAdminStatus oid="1.3.6.1.2.1.2.2.1.7.10" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
										<description><![CDATA[The desired state of the interface.  The testing(3) state indicates that no operational packets can be passed.  When a managed system initializes, all interfaces start with ifAdminStatus in the down(2) state.  As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).]]></description>
										<value>1</value>
									</ifAdminStatus>
									<ifOperStatus oid="1.3.6.1.2.1.2.2.1.8.10" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The current operational state of the interface.  The testing(3) state indicates that no operational packets can be passed.  If ifAdminStatus is down(2) then ifOperStatus should be down(2).  If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection); it should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(6) state if the interface has missing (typically, hardware) components.]]></description>
										<value>1</value>
									</ifOperStatus>
									<ifLastChange oid="1.3.6.1.2.1.2.2.1.9.10" primitiveSyntax="INTEGER" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.]]></description>
										<value>0:00:00.00</value>
									</ifLastChange>
									<ifInOctets oid="1.3.6.1.2.1.2.2.1.10.10" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets received on the interface,   including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>920687669</value>
									</ifInOctets>
									<ifInUcastPkts oid="1.3.6.1.2.1.2.2.1.11.10" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were not addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>1717460</value>
									</ifInUcastPkts>
									<ifInNUcastPkts oid="1.3.6.1.2.1.2.2.1.12.10" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifInMulticastPkts and ifInBroadcastPkts.]]></description>
										<value>217380</value>
									</ifInNUcastPkts>
									<ifInDiscards oid="1.3.6.1.2.1.2.2.1.13.10" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent   their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInDiscards>
									<ifInErrors oid="1.3.6.1.2.1.2.2.1.14.10" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character- oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInErrors>
									<ifInUnknownProtos oid="1.3.6.1.2.1.2.2.1.15.10" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of packets received via the interface which were discarded because of an unknown or unsupported protocol.  For character-oriented or fixed-length interfaces that support protocol multiplexing the number of transmission units received via the interface which were discarded because of an unknown or unsupported protocol.  For any interface that does not support protocol multiplexing, this counter will always be 0.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUnknownProtos>
									<ifOutOctets oid="1.3.6.1.2.1.2.2.1.16.10" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets transmitted out of the interface, including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>399911864</value>
									</ifOutOctets>
									<ifOutUcastPkts oid="1.3.6.1.2.1.2.2.1.17.10" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were not addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>1793575</value>
									</ifOutUcastPkts>
									<ifOutNUcastPkts oid="1.3.6.1.2.1.2.2.1.18.10" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifOutMulticastPkts and ifOutBroadcastPkts.]]></description>
										<value>0</value>
									</ifOutNUcastPkts>
									<ifOutDiscards oid="1.3.6.1.2.1.2.2.1.19.10" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutDiscards>
									<ifOutErrors oid="1.3.6.1.2.1.2.2.1.20.10" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutErrors>
									<ifOutQLen oid="1.3.6.1.2.1.2.2.1.21.10" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The length of the output packet queue (in packets).]]></description>
										<value>0</value>
									</ifOutQLen>
									<ifSpecific oid="1.3.6.1.2.1.2.2.1.22.10" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
										<description><![CDATA[A reference to MIB definitions specific to the particular media being used to realize the interface.  It is   recommended that this value point to an instance of a MIB object in the media-specific MIB, i.e., that this object have the semantics associated with the InstancePointer textual convention defined in RFC 2579.  In fact, it is recommended that the media-specific MIB specify what value ifSpecific should/can take for values of ifType.  If no MIB definitions specific to the particular media are available, the value should be set to the OBJECT IDENTIFIER { 0 0 }.]]></description>
										<value>0.0</value>
									</ifSpecific>

								</ifEntry>
								<ifEntry oid="1.3.6.1.2.1.2.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
									<description><![CDATA[An entry containing management information applicable to a particular interface.]]></description>
									<index name="ifIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.2.2.1.1" access="read-only">11</index>
									<instance instanceIndex="10" instanceName="ifIndex" instanceValue="11">11</instance>
									<ifIndex oid="1.3.6.1.2.1.2.2.1.1.11" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[A unique value, greater than zero, for each interface.  It is recommended that values are assigned contiguously starting from 1.  The value for each interface sub-layer must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.]]></description>
										<value>11</value>
									</ifIndex>
									<ifDescr oid="1.3.6.1.2.1.2.2.1.2.11" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[A textual string containing information about the interface.  This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.]]></description>
										<value>wlan0</value>
									</ifDescr>
									<ifType oid="1.3.6.1.2.1.2.2.1.3.11" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The type of interface.  Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA), through updating the syntax of the IANAifType textual convention.]]></description>
										<value>6</value>
									</ifType>
									<ifMtu oid="1.3.6.1.2.1.2.2.1.4.11" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The size of the largest packet which can be sent/received on the interface, specified in octets.  For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.]]></description>
										<value>1500</value>
									</ifMtu>
									<ifSpeed oid="1.3.6.1.2.1.2.2.1.5.11" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[An estimate of the interface's current bandwidth in bits per second.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.  If the bandwidth of the interface is greater than the maximum value reportable by this object then this object should report its maximum value (4,294,967,295) and ifHighSpeed must be used to report the interace's speed.  For a sub-layer which has no concept of bandwidth, this object should be zero.]]></description>
										<value>10000000</value>
									</ifSpeed>
									<ifPhysAddress oid="1.3.6.1.2.1.2.2.1.6.11" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[The interface's address at its protocol sub-layer.  For example, for an 802.x interface, this object normally contains a MAC address.  The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object.  For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.]]></description>
										<value>64:70:02:cd:74:cc</value>
									</ifPhysAddress>
									<ifAdminStatus oid="1.3.6.1.2.1.2.2.1.7.11" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
										<description><![CDATA[The desired state of the interface.  The testing(3) state indicates that no operational packets can be passed.  When a managed system initializes, all interfaces start with ifAdminStatus in the down(2) state.  As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).]]></description>
										<value>1</value>
									</ifAdminStatus>
									<ifOperStatus oid="1.3.6.1.2.1.2.2.1.8.11" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The current operational state of the interface.  The testing(3) state indicates that no operational packets can be passed.  If ifAdminStatus is down(2) then ifOperStatus should be down(2).  If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection); it should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(6) state if the interface has missing (typically, hardware) components.]]></description>
										<value>1</value>
									</ifOperStatus>
									<ifLastChange oid="1.3.6.1.2.1.2.2.1.9.11" primitiveSyntax="INTEGER" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.]]></description>
										<value>0:00:00.00</value>
									</ifLastChange>
									<ifInOctets oid="1.3.6.1.2.1.2.2.1.10.11" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets received on the interface,   including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>45553651</value>
									</ifInOctets>
									<ifInUcastPkts oid="1.3.6.1.2.1.2.2.1.11.11" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were not addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>191420</value>
									</ifInUcastPkts>
									<ifInNUcastPkts oid="1.3.6.1.2.1.2.2.1.12.11" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifInMulticastPkts and ifInBroadcastPkts.]]></description>
										<value>0</value>
									</ifInNUcastPkts>
									<ifInDiscards oid="1.3.6.1.2.1.2.2.1.13.11" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent   their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInDiscards>
									<ifInErrors oid="1.3.6.1.2.1.2.2.1.14.11" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character- oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInErrors>
									<ifInUnknownProtos oid="1.3.6.1.2.1.2.2.1.15.11" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of packets received via the interface which were discarded because of an unknown or unsupported protocol.  For character-oriented or fixed-length interfaces that support protocol multiplexing the number of transmission units received via the interface which were discarded because of an unknown or unsupported protocol.  For any interface that does not support protocol multiplexing, this counter will always be 0.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUnknownProtos>
									<ifOutOctets oid="1.3.6.1.2.1.2.2.1.16.11" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets transmitted out of the interface, including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>266254734</value>
									</ifOutOctets>
									<ifOutUcastPkts oid="1.3.6.1.2.1.2.2.1.17.11" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were not addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>246008</value>
									</ifOutUcastPkts>
									<ifOutNUcastPkts oid="1.3.6.1.2.1.2.2.1.18.11" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifOutMulticastPkts and ifOutBroadcastPkts.]]></description>
										<value>0</value>
									</ifOutNUcastPkts>
									<ifOutDiscards oid="1.3.6.1.2.1.2.2.1.19.11" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutDiscards>
									<ifOutErrors oid="1.3.6.1.2.1.2.2.1.20.11" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutErrors>
									<ifOutQLen oid="1.3.6.1.2.1.2.2.1.21.11" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The length of the output packet queue (in packets).]]></description>
										<value>0</value>
									</ifOutQLen>
									<ifSpecific oid="1.3.6.1.2.1.2.2.1.22.11" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
										<description><![CDATA[A reference to MIB definitions specific to the particular media being used to realize the interface.  It is   recommended that this value point to an instance of a MIB object in the media-specific MIB, i.e., that this object have the semantics associated with the InstancePointer textual convention defined in RFC 2579.  In fact, it is recommended that the media-specific MIB specify what value ifSpecific should/can take for values of ifType.  If no MIB definitions specific to the particular media are available, the value should be set to the OBJECT IDENTIFIER { 0 0 }.]]></description>
										<value>0.0</value>
									</ifSpecific>

								</ifEntry>
								<ifEntry oid="1.3.6.1.2.1.2.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
									<description><![CDATA[An entry containing management information applicable to a particular interface.]]></description>
									<index name="ifIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.2.2.1.1" access="read-only">12</index>
									<instance instanceIndex="11" instanceName="ifIndex" instanceValue="12">12</instance>
									<ifIndex oid="1.3.6.1.2.1.2.2.1.1.12" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[A unique value, greater than zero, for each interface.  It is recommended that values are assigned contiguously starting from 1.  The value for each interface sub-layer must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.]]></description>
										<value>12</value>
									</ifIndex>
									<ifDescr oid="1.3.6.1.2.1.2.2.1.2.12" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[A textual string containing information about the interface.  This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.]]></description>
										<value>6in4-henet</value>
									</ifDescr>
									<ifType oid="1.3.6.1.2.1.2.2.1.3.12" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The type of interface.  Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA), through updating the syntax of the IANAifType textual convention.]]></description>
										<value>131</value>
									</ifType>
									<ifMtu oid="1.3.6.1.2.1.2.2.1.4.12" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The size of the largest packet which can be sent/received on the interface, specified in octets.  For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.]]></description>
										<value>1480</value>
									</ifMtu>
									<ifSpeed oid="1.3.6.1.2.1.2.2.1.5.12" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[An estimate of the interface's current bandwidth in bits per second.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.  If the bandwidth of the interface is greater than the maximum value reportable by this object then this object should report its maximum value (4,294,967,295) and ifHighSpeed must be used to report the interace's speed.  For a sub-layer which has no concept of bandwidth, this object should be zero.]]></description>
										<value>0</value>
									</ifSpeed>
									<ifPhysAddress oid="1.3.6.1.2.1.2.2.1.6.12" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[The interface's address at its protocol sub-layer.  For example, for an 802.x interface, this object normally contains a MAC address.  The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object.  For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.]]></description>
										<value>c1:13:ac:85:00:00</value>
									</ifPhysAddress>
									<ifAdminStatus oid="1.3.6.1.2.1.2.2.1.7.12" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
										<description><![CDATA[The desired state of the interface.  The testing(3) state indicates that no operational packets can be passed.  When a managed system initializes, all interfaces start with ifAdminStatus in the down(2) state.  As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).]]></description>
										<value>1</value>
									</ifAdminStatus>
									<ifOperStatus oid="1.3.6.1.2.1.2.2.1.8.12" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The current operational state of the interface.  The testing(3) state indicates that no operational packets can be passed.  If ifAdminStatus is down(2) then ifOperStatus should be down(2).  If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection); it should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(6) state if the interface has missing (typically, hardware) components.]]></description>
										<value>1</value>
									</ifOperStatus>
									<ifLastChange oid="1.3.6.1.2.1.2.2.1.9.12" primitiveSyntax="INTEGER" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.]]></description>
										<value>0:00:00.00</value>
									</ifLastChange>
									<ifInOctets oid="1.3.6.1.2.1.2.2.1.10.12" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets received on the interface,   including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>706</value>
									</ifInOctets>
									<ifInUcastPkts oid="1.3.6.1.2.1.2.2.1.11.12" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were not addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>5</value>
									</ifInUcastPkts>
									<ifInNUcastPkts oid="1.3.6.1.2.1.2.2.1.12.12" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifInMulticastPkts and ifInBroadcastPkts.]]></description>
										<value>0</value>
									</ifInNUcastPkts>
									<ifInDiscards oid="1.3.6.1.2.1.2.2.1.13.12" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent   their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInDiscards>
									<ifInErrors oid="1.3.6.1.2.1.2.2.1.14.12" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character- oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInErrors>
									<ifInUnknownProtos oid="1.3.6.1.2.1.2.2.1.15.12" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of packets received via the interface which were discarded because of an unknown or unsupported protocol.  For character-oriented or fixed-length interfaces that support protocol multiplexing the number of transmission units received via the interface which were discarded because of an unknown or unsupported protocol.  For any interface that does not support protocol multiplexing, this counter will always be 0.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUnknownProtos>
									<ifOutOctets oid="1.3.6.1.2.1.2.2.1.16.12" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets transmitted out of the interface, including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>1044</value>
									</ifOutOctets>
									<ifOutUcastPkts oid="1.3.6.1.2.1.2.2.1.17.12" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were not addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>8</value>
									</ifOutUcastPkts>
									<ifOutNUcastPkts oid="1.3.6.1.2.1.2.2.1.18.12" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifOutMulticastPkts and ifOutBroadcastPkts.]]></description>
										<value>0</value>
									</ifOutNUcastPkts>
									<ifOutDiscards oid="1.3.6.1.2.1.2.2.1.19.12" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutDiscards>
									<ifOutErrors oid="1.3.6.1.2.1.2.2.1.20.12" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutErrors>
									<ifOutQLen oid="1.3.6.1.2.1.2.2.1.21.12" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The length of the output packet queue (in packets).]]></description>
										<value>0</value>
									</ifOutQLen>
									<ifSpecific oid="1.3.6.1.2.1.2.2.1.22.12" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
										<description><![CDATA[A reference to MIB definitions specific to the particular media being used to realize the interface.  It is   recommended that this value point to an instance of a MIB object in the media-specific MIB, i.e., that this object have the semantics associated with the InstancePointer textual convention defined in RFC 2579.  In fact, it is recommended that the media-specific MIB specify what value ifSpecific should/can take for values of ifType.  If no MIB definitions specific to the particular media are available, the value should be set to the OBJECT IDENTIFIER { 0 0 }.]]></description>
										<value>0.0</value>
									</ifSpecific>

								</ifEntry>
								<ifEntry oid="1.3.6.1.2.1.2.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
									<description><![CDATA[An entry containing management information applicable to a particular interface.]]></description>
									<index name="ifIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.2.2.1.1" access="read-only">13</index>
									<instance instanceIndex="12" instanceName="ifIndex" instanceValue="13">13</instance>
									<ifIndex oid="1.3.6.1.2.1.2.2.1.1.13" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[A unique value, greater than zero, for each interface.  It is recommended that values are assigned contiguously starting from 1.  The value for each interface sub-layer must remain constant at least from one re-initialization of the entity's network management system to the next re- initialization.]]></description>
										<value>13</value>
									</ifIndex>
									<ifDescr oid="1.3.6.1.2.1.2.2.1.2.13" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[A textual string containing information about the interface.  This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.]]></description>
										<value>tun0</value>
									</ifDescr>
									<ifType oid="1.3.6.1.2.1.2.2.1.3.13" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The type of interface.  Additional values for ifType are assigned by the Internet Assigned Numbers Authority (IANA), through updating the syntax of the IANAifType textual convention.]]></description>
										<value>1</value>
									</ifType>
									<ifMtu oid="1.3.6.1.2.1.2.2.1.4.13" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The size of the largest packet which can be sent/received on the interface, specified in octets.  For interfaces that are used for transmitting network datagrams, this is the size of the largest network datagram that can be sent on the interface.]]></description>
										<value>1500</value>
									</ifMtu>
									<ifSpeed oid="1.3.6.1.2.1.2.2.1.5.13" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[An estimate of the interface's current bandwidth in bits per second.  For interfaces which do not vary in bandwidth or for those where no accurate estimation can be made, this object should contain the nominal bandwidth.  If the bandwidth of the interface is greater than the maximum value reportable by this object then this object should report its maximum value (4,294,967,295) and ifHighSpeed must be used to report the interace's speed.  For a sub-layer which has no concept of bandwidth, this object should be zero.]]></description>
										<value>0</value>
									</ifSpeed>
									<ifPhysAddress oid="1.3.6.1.2.1.2.2.1.6.13" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
										<description><![CDATA[The interface's address at its protocol sub-layer.  For example, for an 802.x interface, this object normally contains a MAC address.  The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object.  For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.]]></description>
										<value></value>
									</ifPhysAddress>
									<ifAdminStatus oid="1.3.6.1.2.1.2.2.1.7.13" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
										<description><![CDATA[The desired state of the interface.  The testing(3) state indicates that no operational packets can be passed.  When a managed system initializes, all interfaces start with ifAdminStatus in the down(2) state.  As a result of either explicit management action or per configuration information retained by the managed system, ifAdminStatus is then changed to either the up(1) or testing(3) states (or remains in the down(2) state).]]></description>
										<value>1</value>
									</ifAdminStatus>
									<ifOperStatus oid="1.3.6.1.2.1.2.2.1.8.13" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The current operational state of the interface.  The testing(3) state indicates that no operational packets can be passed.  If ifAdminStatus is down(2) then ifOperStatus should be down(2).  If ifAdminStatus is changed to up(1) then ifOperStatus should change to up(1) if the interface is ready to transmit and receive network traffic; it should change to dormant(5) if the interface is waiting for external actions (such as a serial line waiting for an incoming connection); it should remain in the down(2) state if and only if there is a fault that prevents it from going to the up(1) state; it should remain in the notPresent(6) state if the interface has missing (typically, hardware) components.]]></description>
										<value>1</value>
									</ifOperStatus>
									<ifLastChange oid="1.3.6.1.2.1.2.2.1.9.13" primitiveSyntax="INTEGER" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime at the time the interface entered its current operational state.  If the current state was entered prior to the last re-initialization of the local network management subsystem, then this object contains a zero value.]]></description>
										<value>0:00:00.00</value>
									</ifLastChange>
									<ifInOctets oid="1.3.6.1.2.1.2.2.1.10.13" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets received on the interface,   including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInOctets>
									<ifInUcastPkts oid="1.3.6.1.2.1.2.2.1.11.13" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were not addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUcastPkts>
									<ifInNUcastPkts oid="1.3.6.1.2.1.2.2.1.12.13" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of packets, delivered by this sub-layer to a higher (sub-)layer, which were addressed to a multicast or broadcast address at this sub-layer.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifInMulticastPkts and ifInBroadcastPkts.]]></description>
										<value>0</value>
									</ifInNUcastPkts>
									<ifInDiscards oid="1.3.6.1.2.1.2.2.1.13.13" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent   their being deliverable to a higher-layer protocol.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInDiscards>
									<ifInErrors oid="1.3.6.1.2.1.2.2.1.14.13" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of inbound packets that contained errors preventing them from being deliverable to a higher-layer protocol.  For character- oriented or fixed-length interfaces, the number of inbound transmission units that contained errors preventing them from being deliverable to a higher-layer protocol.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInErrors>
									<ifInUnknownProtos oid="1.3.6.1.2.1.2.2.1.15.13" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of packets received via the interface which were discarded because of an unknown or unsupported protocol.  For character-oriented or fixed-length interfaces that support protocol multiplexing the number of transmission units received via the interface which were discarded because of an unknown or unsupported protocol.  For any interface that does not support protocol multiplexing, this counter will always be 0.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifInUnknownProtos>
									<ifOutOctets oid="1.3.6.1.2.1.2.2.1.16.13" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of octets transmitted out of the interface, including framing characters.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutOctets>
									<ifOutUcastPkts oid="1.3.6.1.2.1.2.2.1.17.13" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were not addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutUcastPkts>
									<ifOutNUcastPkts oid="1.3.6.1.2.1.2.2.1.18.13" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The total number of packets that higher-level protocols requested be transmitted, and which were addressed to a multicast or broadcast address at this sub-layer, including those that were discarded or not sent.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.  This object is deprecated in favour of ifOutMulticastPkts and ifOutBroadcastPkts.]]></description>
										<value>0</value>
									</ifOutNUcastPkts>
									<ifOutDiscards oid="1.3.6.1.2.1.2.2.1.19.13" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[The number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutDiscards>
									<ifOutErrors oid="1.3.6.1.2.1.2.2.1.20.13" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
										<description><![CDATA[For packet-oriented interfaces, the number of outbound packets that could not be transmitted because of errors. For character-oriented or fixed-length interfaces, the number of outbound transmission units that could not be transmitted because of errors.  Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.]]></description>
										<value>0</value>
									</ifOutErrors>
									<ifOutQLen oid="1.3.6.1.2.1.2.2.1.21.13" primitiveSyntax="INTEGER" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The length of the output packet queue (in packets).]]></description>
										<value>0</value>
									</ifOutQLen>
									<ifSpecific oid="1.3.6.1.2.1.2.2.1.22.13" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
										<description><![CDATA[A reference to MIB definitions specific to the particular media being used to realize the interface.  It is   recommended that this value point to an instance of a MIB object in the media-specific MIB, i.e., that this object have the semantics associated with the InstancePointer textual convention defined in RFC 2579.  In fact, it is recommended that the media-specific MIB specify what value ifSpecific should/can take for values of ifType.  If no MIB definitions specific to the particular media are available, the value should be set to the OBJECT IDENTIFIER { 0 0 }.]]></description>
										<value>0.0</value>
									</ifSpecific>

								</ifEntry>
							</ifTable>
						</interfaces>
						<host oid="1.3.6.1.2.1.25">
							<hrSystem oid="1.3.6.1.2.1.25.1">
									<hrSystemUptime oid="1.3.6.1.2.1.25.1.1" primitiveSyntax="OBJECT-TYPE" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The amount of time since this host was last initialized.  Note that this is different from sysUpTime in the SNMPv2-MIB [RFC1907] because sysUpTime is the uptime of the network management portion of the system.]]></description>
										<value>4 days, 20:54:17.39</value>
									</hrSystemUptime>
									<hrSystemDate oid="1.3.6.1.2.1.25.1.2" primitiveSyntax="OBJECT-TYPE" snmpSyntax ="OCTET STRING" access="read-write" units="null">
										<description><![CDATA[The host's notion of the local date and time of day.]]></description>
										<value>07:de:07:11:14:17:21:00:2b:00:00</value>
									</hrSystemDate>
									<hrSystemInitialLoadDevice oid="1.3.6.1.2.1.25.1.3" primitiveSyntax="OBJECT-TYPE" snmpSyntax ="INTEGER" access="read-write" units="null">
										<description><![CDATA[The index of the hrDeviceEntry for the device from which this host is configured to load its initial operating system configuration (i.e., which operating system code and/or boot parameters).  Note that writing to this object just changes the configuration that will be used the next time the operating system is loaded and does not actually cause the reload to occur.]]></description>
										<value>1536</value>
									</hrSystemInitialLoadDevice>
									<hrSystemInitialLoadParameters oid="1.3.6.1.2.1.25.1.4" primitiveSyntax="OBJECT-TYPE" snmpSyntax ="OCTET STRING" access="read-write" units="null">
										<description><![CDATA[This object contains the parameters (e.g. a pathname and parameter) supplied to the load device when requesting the initial operating system configuration from that device.  Note that writing to this object just changes the configuration that will be used the next time the operating system is loaded and does not actually cause the reload to occur.]]></description>
										<value> board=TL-WR1043ND console=ttyS0,115200 rootfstype=squashfs,jffs2 noinitrd
</value>
									</hrSystemInitialLoadParameters>
									<hrSystemNumUsers oid="1.3.6.1.2.1.25.1.5" primitiveSyntax="OBJECT-TYPE" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The number of user sessions for which this host is storing state information.  A session is a collection of processes requiring a single act of user authentication and possibly subject to collective job control.]]></description>
										<value>0</value>
									</hrSystemNumUsers>
									<hrSystemProcesses oid="1.3.6.1.2.1.25.1.6" primitiveSyntax="OBJECT-TYPE" snmpSyntax ="Gauge32" access="read-only" units="null">
										<description><![CDATA[The number of process contexts currently loaded or running on this system.]]></description>
										<value>0</value>
									</hrSystemProcesses>
									<hrSystemMaxProcesses oid="1.3.6.1.2.1.25.1.7" primitiveSyntax="OBJECT-TYPE" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The maximum number of process contexts this system can support.  If there is no fixed maximum, the value should be zero.  On systems that have a fixed maximum, this object can help diagnose failures that occur when this maximum is reached.]]></description>
										<value>0</value>
									</hrSystemMaxProcesses>
							</hrSystem>
							<hrStorage oid="1.3.6.1.2.1.25.2">
								<hrStorageTypes oid="1.3.6.1.2.1.25.2.1">
								</hrStorageTypes>
									<hrMemorySize oid="1.3.6.1.2.1.25.2.2" primitiveSyntax="OBJECT-TYPE" snmpSyntax ="INTEGER" access="read-only" units="KBytes">
										<description><![CDATA[The amount of physical read-write main memory, typically RAM, contained by the host.]]></description>
										<value>29212</value>
									</hrMemorySize>
								<hrStorageTable oid="1.3.6.1.2.1.25.2.3">
									<hrStorageEntry oid="1.3.6.1.2.1.25.2.3.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one logical storage area on the host.  As an example, an instance of the hrStorageType object might be named hrStorageType.3]]></description>
										<index name="hrStorageIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.2.3.1.1" access="read-only">1</index>
										<instance instanceIndex="1" instanceName="hrStorageIndex" instanceValue="1">1</instance>
										<hrStorageIndex oid="1.3.6.1.2.1.25.2.3.1.1.1" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each logical storage area contained by the host.]]></description>
											<value>1</value>
										</hrStorageIndex>
										<hrStorageType oid="1.3.6.1.2.1.25.2.3.1.2.1" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The type of storage represented by this entry.]]></description>
											<value>1.3.6.1.2.1.25.2.1.2</value>
										</hrStorageType>
										<hrStorageDescr oid="1.3.6.1.2.1.25.2.3.1.3.1" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A description of the type and instance of the storage described by this entry.]]></description>
											<value>Physical memory</value>
										</hrStorageDescr>
										<hrStorageAllocationUnits oid="1.3.6.1.2.1.25.2.3.1.4.1" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="Bytes">
											<description><![CDATA[The size, in bytes, of the data objects allocated from this pool.  If this entry is monitoring sectors, blocks, buffers, or packets, for example, this number will commonly be greater than one.  Otherwise this number will typically be one.]]></description>
											<value>1024</value>
										</hrStorageAllocationUnits>
										<hrStorageSize oid="1.3.6.1.2.1.25.2.3.1.5.1" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
											<description><![CDATA[The size of the storage represented by this entry, in units of hrStorageAllocationUnits. This object is writable to allow remote configuration of the size of the storage area in those cases where such an operation makes sense and is possible on the underlying system. For example, the amount of main memory allocated to a buffer pool might be modified or the amount of disk space allocated to virtual memory might be modified.]]></description>
											<value>29212</value>
										</hrStorageSize>
										<hrStorageUsed oid="1.3.6.1.2.1.25.2.3.1.6.1" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The amount of the storage represented by this entry that is allocated, in units of hrStorageAllocationUnits.]]></description>
											<value>27212</value>
										</hrStorageUsed>

									</hrStorageEntry>
									<hrStorageEntry oid="1.3.6.1.2.1.25.2.3.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one logical storage area on the host.  As an example, an instance of the hrStorageType object might be named hrStorageType.3]]></description>
										<index name="hrStorageIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.2.3.1.1" access="read-only">3</index>
										<instance instanceIndex="2" instanceName="hrStorageIndex" instanceValue="3">3</instance>
										<hrStorageIndex oid="1.3.6.1.2.1.25.2.3.1.1.3" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each logical storage area contained by the host.]]></description>
											<value>3</value>
										</hrStorageIndex>
										<hrStorageType oid="1.3.6.1.2.1.25.2.3.1.2.3" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The type of storage represented by this entry.]]></description>
											<value>1.3.6.1.2.1.25.2.1.3</value>
										</hrStorageType>
										<hrStorageDescr oid="1.3.6.1.2.1.25.2.3.1.3.3" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A description of the type and instance of the storage described by this entry.]]></description>
											<value>Virtual memory</value>
										</hrStorageDescr>
										<hrStorageAllocationUnits oid="1.3.6.1.2.1.25.2.3.1.4.3" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="Bytes">
											<description><![CDATA[The size, in bytes, of the data objects allocated from this pool.  If this entry is monitoring sectors, blocks, buffers, or packets, for example, this number will commonly be greater than one.  Otherwise this number will typically be one.]]></description>
											<value>1024</value>
										</hrStorageAllocationUnits>
										<hrStorageSize oid="1.3.6.1.2.1.25.2.3.1.5.3" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
											<description><![CDATA[The size of the storage represented by this entry, in units of hrStorageAllocationUnits. This object is writable to allow remote configuration of the size of the storage area in those cases where such an operation makes sense and is possible on the underlying system. For example, the amount of main memory allocated to a buffer pool might be modified or the amount of disk space allocated to virtual memory might be modified.]]></description>
											<value>29212</value>
										</hrStorageSize>
										<hrStorageUsed oid="1.3.6.1.2.1.25.2.3.1.6.3" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The amount of the storage represented by this entry that is allocated, in units of hrStorageAllocationUnits.]]></description>
											<value>27212</value>
										</hrStorageUsed>

									</hrStorageEntry>
									<hrStorageEntry oid="1.3.6.1.2.1.25.2.3.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one logical storage area on the host.  As an example, an instance of the hrStorageType object might be named hrStorageType.3]]></description>
										<index name="hrStorageIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.2.3.1.1" access="read-only">6</index>
										<instance instanceIndex="3" instanceName="hrStorageIndex" instanceValue="6">6</instance>
										<hrStorageIndex oid="1.3.6.1.2.1.25.2.3.1.1.6" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each logical storage area contained by the host.]]></description>
											<value>6</value>
										</hrStorageIndex>
										<hrStorageType oid="1.3.6.1.2.1.25.2.3.1.2.6" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The type of storage represented by this entry.]]></description>
											<value>1.3.6.1.2.1.25.2.1.1</value>
										</hrStorageType>
										<hrStorageDescr oid="1.3.6.1.2.1.25.2.3.1.3.6" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A description of the type and instance of the storage described by this entry.]]></description>
											<value>Memory buffers</value>
										</hrStorageDescr>
										<hrStorageAllocationUnits oid="1.3.6.1.2.1.25.2.3.1.4.6" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="Bytes">
											<description><![CDATA[The size, in bytes, of the data objects allocated from this pool.  If this entry is monitoring sectors, blocks, buffers, or packets, for example, this number will commonly be greater than one.  Otherwise this number will typically be one.]]></description>
											<value>1024</value>
										</hrStorageAllocationUnits>
										<hrStorageSize oid="1.3.6.1.2.1.25.2.3.1.5.6" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
											<description><![CDATA[The size of the storage represented by this entry, in units of hrStorageAllocationUnits. This object is writable to allow remote configuration of the size of the storage area in those cases where such an operation makes sense and is possible on the underlying system. For example, the amount of main memory allocated to a buffer pool might be modified or the amount of disk space allocated to virtual memory might be modified.]]></description>
											<value>29212</value>
										</hrStorageSize>
										<hrStorageUsed oid="1.3.6.1.2.1.25.2.3.1.6.6" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The amount of the storage represented by this entry that is allocated, in units of hrStorageAllocationUnits.]]></description>
											<value>1604</value>
										</hrStorageUsed>

									</hrStorageEntry>
									<hrStorageEntry oid="1.3.6.1.2.1.25.2.3.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one logical storage area on the host.  As an example, an instance of the hrStorageType object might be named hrStorageType.3]]></description>
										<index name="hrStorageIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.2.3.1.1" access="read-only">7</index>
										<instance instanceIndex="4" instanceName="hrStorageIndex" instanceValue="7">7</instance>
										<hrStorageIndex oid="1.3.6.1.2.1.25.2.3.1.1.7" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each logical storage area contained by the host.]]></description>
											<value>7</value>
										</hrStorageIndex>
										<hrStorageType oid="1.3.6.1.2.1.25.2.3.1.2.7" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The type of storage represented by this entry.]]></description>
											<value>1.3.6.1.2.1.25.2.1.1</value>
										</hrStorageType>
										<hrStorageDescr oid="1.3.6.1.2.1.25.2.3.1.3.7" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A description of the type and instance of the storage described by this entry.]]></description>
											<value>Cached memory</value>
										</hrStorageDescr>
										<hrStorageAllocationUnits oid="1.3.6.1.2.1.25.2.3.1.4.7" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="Bytes">
											<description><![CDATA[The size, in bytes, of the data objects allocated from this pool.  If this entry is monitoring sectors, blocks, buffers, or packets, for example, this number will commonly be greater than one.  Otherwise this number will typically be one.]]></description>
											<value>1024</value>
										</hrStorageAllocationUnits>
										<hrStorageSize oid="1.3.6.1.2.1.25.2.3.1.5.7" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
											<description><![CDATA[The size of the storage represented by this entry, in units of hrStorageAllocationUnits. This object is writable to allow remote configuration of the size of the storage area in those cases where such an operation makes sense and is possible on the underlying system. For example, the amount of main memory allocated to a buffer pool might be modified or the amount of disk space allocated to virtual memory might be modified.]]></description>
											<value>10580</value>
										</hrStorageSize>
										<hrStorageUsed oid="1.3.6.1.2.1.25.2.3.1.6.7" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The amount of the storage represented by this entry that is allocated, in units of hrStorageAllocationUnits.]]></description>
											<value>10580</value>
										</hrStorageUsed>

									</hrStorageEntry>
									<hrStorageEntry oid="1.3.6.1.2.1.25.2.3.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one logical storage area on the host.  As an example, an instance of the hrStorageType object might be named hrStorageType.3]]></description>
										<index name="hrStorageIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.2.3.1.1" access="read-only">8</index>
										<instance instanceIndex="5" instanceName="hrStorageIndex" instanceValue="8">8</instance>
										<hrStorageIndex oid="1.3.6.1.2.1.25.2.3.1.1.8" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each logical storage area contained by the host.]]></description>
											<value>8</value>
										</hrStorageIndex>
										<hrStorageType oid="1.3.6.1.2.1.25.2.3.1.2.8" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The type of storage represented by this entry.]]></description>
											<value>1.3.6.1.2.1.25.2.1.1</value>
										</hrStorageType>
										<hrStorageDescr oid="1.3.6.1.2.1.25.2.3.1.3.8" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A description of the type and instance of the storage described by this entry.]]></description>
											<value>Shared memory</value>
										</hrStorageDescr>
										<hrStorageAllocationUnits oid="1.3.6.1.2.1.25.2.3.1.4.8" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="Bytes">
											<description><![CDATA[The size, in bytes, of the data objects allocated from this pool.  If this entry is monitoring sectors, blocks, buffers, or packets, for example, this number will commonly be greater than one.  Otherwise this number will typically be one.]]></description>
											<value>1024</value>
										</hrStorageAllocationUnits>
										<hrStorageSize oid="1.3.6.1.2.1.25.2.3.1.5.8" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
											<description><![CDATA[The size of the storage represented by this entry, in units of hrStorageAllocationUnits. This object is writable to allow remote configuration of the size of the storage area in those cases where such an operation makes sense and is possible on the underlying system. For example, the amount of main memory allocated to a buffer pool might be modified or the amount of disk space allocated to virtual memory might be modified.]]></description>
											<value>0</value>
										</hrStorageSize>

									</hrStorageEntry>
									<hrStorageEntry oid="1.3.6.1.2.1.25.2.3.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one logical storage area on the host.  As an example, an instance of the hrStorageType object might be named hrStorageType.3]]></description>
										<index name="hrStorageIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.2.3.1.1" access="read-only">10</index>
										<instance instanceIndex="6" instanceName="hrStorageIndex" instanceValue="10">10</instance>
										<hrStorageIndex oid="1.3.6.1.2.1.25.2.3.1.1.10" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each logical storage area contained by the host.]]></description>
											<value>10</value>
										</hrStorageIndex>
										<hrStorageType oid="1.3.6.1.2.1.25.2.3.1.2.10" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The type of storage represented by this entry.]]></description>
											<value>1.3.6.1.2.1.25.2.1.3</value>
										</hrStorageType>
										<hrStorageDescr oid="1.3.6.1.2.1.25.2.3.1.3.10" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A description of the type and instance of the storage described by this entry.]]></description>
											<value>Swap space</value>
										</hrStorageDescr>
										<hrStorageAllocationUnits oid="1.3.6.1.2.1.25.2.3.1.4.10" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="Bytes">
											<description><![CDATA[The size, in bytes, of the data objects allocated from this pool.  If this entry is monitoring sectors, blocks, buffers, or packets, for example, this number will commonly be greater than one.  Otherwise this number will typically be one.]]></description>
											<value>1024</value>
										</hrStorageAllocationUnits>
										<hrStorageSize oid="1.3.6.1.2.1.25.2.3.1.5.10" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
											<description><![CDATA[The size of the storage represented by this entry, in units of hrStorageAllocationUnits. This object is writable to allow remote configuration of the size of the storage area in those cases where such an operation makes sense and is possible on the underlying system. For example, the amount of main memory allocated to a buffer pool might be modified or the amount of disk space allocated to virtual memory might be modified.]]></description>
											<value>0</value>
										</hrStorageSize>
										<hrStorageUsed oid="1.3.6.1.2.1.25.2.3.1.6.10" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The amount of the storage represented by this entry that is allocated, in units of hrStorageAllocationUnits.]]></description>
											<value>0</value>
										</hrStorageUsed>

									</hrStorageEntry>
									<hrStorageEntry oid="1.3.6.1.2.1.25.2.3.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one logical storage area on the host.  As an example, an instance of the hrStorageType object might be named hrStorageType.3]]></description>
										<index name="hrStorageIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.2.3.1.1" access="read-only">31</index>
										<instance instanceIndex="7" instanceName="hrStorageIndex" instanceValue="31">31</instance>
										<hrStorageIndex oid="1.3.6.1.2.1.25.2.3.1.1.31" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each logical storage area contained by the host.]]></description>
											<value>31</value>
										</hrStorageIndex>
										<hrStorageType oid="1.3.6.1.2.1.25.2.3.1.2.31" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The type of storage represented by this entry.]]></description>
											<value>1.3.6.1.2.1.25.2.1.4</value>
										</hrStorageType>
										<hrStorageDescr oid="1.3.6.1.2.1.25.2.3.1.3.31" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A description of the type and instance of the storage described by this entry.]]></description>
											<value>/rom</value>
										</hrStorageDescr>
										<hrStorageAllocationUnits oid="1.3.6.1.2.1.25.2.3.1.4.31" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="Bytes">
											<description><![CDATA[The size, in bytes, of the data objects allocated from this pool.  If this entry is monitoring sectors, blocks, buffers, or packets, for example, this number will commonly be greater than one.  Otherwise this number will typically be one.]]></description>
											<value>262144</value>
										</hrStorageAllocationUnits>
										<hrStorageSize oid="1.3.6.1.2.1.25.2.3.1.5.31" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
											<description><![CDATA[The size of the storage represented by this entry, in units of hrStorageAllocationUnits. This object is writable to allow remote configuration of the size of the storage area in those cases where such an operation makes sense and is possible on the underlying system. For example, the amount of main memory allocated to a buffer pool might be modified or the amount of disk space allocated to virtual memory might be modified.]]></description>
											<value>8</value>
										</hrStorageSize>
										<hrStorageUsed oid="1.3.6.1.2.1.25.2.3.1.6.31" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The amount of the storage represented by this entry that is allocated, in units of hrStorageAllocationUnits.]]></description>
											<value>8</value>
										</hrStorageUsed>

									</hrStorageEntry>
									<hrStorageEntry oid="1.3.6.1.2.1.25.2.3.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one logical storage area on the host.  As an example, an instance of the hrStorageType object might be named hrStorageType.3]]></description>
										<index name="hrStorageIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.2.3.1.1" access="read-only">32</index>
										<instance instanceIndex="8" instanceName="hrStorageIndex" instanceValue="32">32</instance>
										<hrStorageIndex oid="1.3.6.1.2.1.25.2.3.1.1.32" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each logical storage area contained by the host.]]></description>
											<value>32</value>
										</hrStorageIndex>
										<hrStorageType oid="1.3.6.1.2.1.25.2.3.1.2.32" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The type of storage represented by this entry.]]></description>
											<value>1.3.6.1.2.1.25.2.1.4</value>
										</hrStorageType>
										<hrStorageDescr oid="1.3.6.1.2.1.25.2.3.1.3.32" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A description of the type and instance of the storage described by this entry.]]></description>
											<value>/overlay</value>
										</hrStorageDescr>
										<hrStorageAllocationUnits oid="1.3.6.1.2.1.25.2.3.1.4.32" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="Bytes">
											<description><![CDATA[The size, in bytes, of the data objects allocated from this pool.  If this entry is monitoring sectors, blocks, buffers, or packets, for example, this number will commonly be greater than one.  Otherwise this number will typically be one.]]></description>
											<value>4096</value>
										</hrStorageAllocationUnits>
										<hrStorageSize oid="1.3.6.1.2.1.25.2.3.1.5.32" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
											<description><![CDATA[The size of the storage represented by this entry, in units of hrStorageAllocationUnits. This object is writable to allow remote configuration of the size of the storage area in those cases where such an operation makes sense and is possible on the underlying system. For example, the amount of main memory allocated to a buffer pool might be modified or the amount of disk space allocated to virtual memory might be modified.]]></description>
											<value>1296</value>
										</hrStorageSize>
										<hrStorageUsed oid="1.3.6.1.2.1.25.2.3.1.6.32" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The amount of the storage represented by this entry that is allocated, in units of hrStorageAllocationUnits.]]></description>
											<value>1106</value>
										</hrStorageUsed>

									</hrStorageEntry>
									<hrStorageEntry oid="1.3.6.1.2.1.25.2.3.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one logical storage area on the host.  As an example, an instance of the hrStorageType object might be named hrStorageType.3]]></description>
										<index name="hrStorageIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.2.3.1.1" access="read-only">33</index>
										<instance instanceIndex="9" instanceName="hrStorageIndex" instanceValue="33">33</instance>
										<hrStorageIndex oid="1.3.6.1.2.1.25.2.3.1.1.33" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each logical storage area contained by the host.]]></description>
											<value>33</value>
										</hrStorageIndex>
										<hrStorageType oid="1.3.6.1.2.1.25.2.3.1.2.33" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The type of storage represented by this entry.]]></description>
											<value>1.3.6.1.2.1.25.2.1.4</value>
										</hrStorageType>
										<hrStorageDescr oid="1.3.6.1.2.1.25.2.3.1.3.33" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A description of the type and instance of the storage described by this entry.]]></description>
											<value>/</value>
										</hrStorageDescr>
										<hrStorageAllocationUnits oid="1.3.6.1.2.1.25.2.3.1.4.33" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="Bytes">
											<description><![CDATA[The size, in bytes, of the data objects allocated from this pool.  If this entry is monitoring sectors, blocks, buffers, or packets, for example, this number will commonly be greater than one.  Otherwise this number will typically be one.]]></description>
											<value>4096</value>
										</hrStorageAllocationUnits>
										<hrStorageSize oid="1.3.6.1.2.1.25.2.3.1.5.33" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-write" units="null">
											<description><![CDATA[The size of the storage represented by this entry, in units of hrStorageAllocationUnits. This object is writable to allow remote configuration of the size of the storage area in those cases where such an operation makes sense and is possible on the underlying system. For example, the amount of main memory allocated to a buffer pool might be modified or the amount of disk space allocated to virtual memory might be modified.]]></description>
											<value>1296</value>
										</hrStorageSize>
										<hrStorageUsed oid="1.3.6.1.2.1.25.2.3.1.6.33" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The amount of the storage represented by this entry that is allocated, in units of hrStorageAllocationUnits.]]></description>
											<value>1106</value>
										</hrStorageUsed>

									</hrStorageEntry>
								</hrStorageTable>
							</hrStorage>
							<hrDevice oid="1.3.6.1.2.1.25.3">
								<hrDeviceTypes oid="1.3.6.1.2.1.25.3.1">
								</hrDeviceTypes>
								<hrDeviceTable oid="1.3.6.1.2.1.25.3.2">
									<hrDeviceEntry oid="1.3.6.1.2.1.25.3.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">768</index>
										<instance instanceIndex="1" instanceName="hrDeviceIndex" instanceValue="768">768</instance>
										<hrDeviceIndex oid="1.3.6.1.2.1.25.3.2.1.1.768" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>768</value>
										</hrDeviceIndex>
										<hrDeviceType oid="1.3.6.1.2.1.25.3.2.1.2.768" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.]]></description>
											<value>1.3.6.1.2.1.25.3.1.3</value>
										</hrDeviceType>
										<hrDeviceDescr oid="1.3.6.1.2.1.25.3.2.1.3.768" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.]]></description>
											<value></value>
										</hrDeviceDescr>
										<hrDeviceID oid="1.3.6.1.2.1.25.3.2.1.4.768" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID for this device.]]></description>
											<value>0.0</value>
										</hrDeviceID>
										<hrDeviceStatus oid="1.3.6.1.2.1.25.3.2.1.5.768" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.]]></description>
											<value>2</value>
										</hrDeviceStatus>

									</hrDeviceEntry>
									<hrDeviceEntry oid="1.3.6.1.2.1.25.3.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1025</index>
										<instance instanceIndex="2" instanceName="hrDeviceIndex" instanceValue="1025">1025</instance>
										<hrDeviceIndex oid="1.3.6.1.2.1.25.3.2.1.1.1025" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>1025</value>
										</hrDeviceIndex>
										<hrDeviceType oid="1.3.6.1.2.1.25.3.2.1.2.1025" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.]]></description>
											<value>1.3.6.1.2.1.25.3.1.4</value>
										</hrDeviceType>
										<hrDeviceDescr oid="1.3.6.1.2.1.25.3.2.1.3.1025" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.]]></description>
											<value>network interface lo</value>
										</hrDeviceDescr>
										<hrDeviceID oid="1.3.6.1.2.1.25.3.2.1.4.1025" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID for this device.]]></description>
											<value>0.0</value>
										</hrDeviceID>
										<hrDeviceStatus oid="1.3.6.1.2.1.25.3.2.1.5.1025" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.]]></description>
											<value>2</value>
										</hrDeviceStatus>
										<hrDeviceErrors oid="1.3.6.1.2.1.25.3.2.1.6.1025" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
											<description><![CDATA[The number of errors detected on this device.  It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.  However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization.]]></description>
											<value>0</value>
										</hrDeviceErrors>

									</hrDeviceEntry>
									<hrDeviceEntry oid="1.3.6.1.2.1.25.3.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1026</index>
										<instance instanceIndex="3" instanceName="hrDeviceIndex" instanceValue="1026">1026</instance>
										<hrDeviceIndex oid="1.3.6.1.2.1.25.3.2.1.1.1026" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>1026</value>
										</hrDeviceIndex>
										<hrDeviceType oid="1.3.6.1.2.1.25.3.2.1.2.1026" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.]]></description>
											<value>1.3.6.1.2.1.25.3.1.4</value>
										</hrDeviceType>
										<hrDeviceDescr oid="1.3.6.1.2.1.25.3.2.1.3.1026" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.]]></description>
											<value>network interface eth0</value>
										</hrDeviceDescr>
										<hrDeviceID oid="1.3.6.1.2.1.25.3.2.1.4.1026" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID for this device.]]></description>
											<value>0.0</value>
										</hrDeviceID>
										<hrDeviceStatus oid="1.3.6.1.2.1.25.3.2.1.5.1026" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.]]></description>
											<value>2</value>
										</hrDeviceStatus>
										<hrDeviceErrors oid="1.3.6.1.2.1.25.3.2.1.6.1026" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
											<description><![CDATA[The number of errors detected on this device.  It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.  However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization.]]></description>
											<value>0</value>
										</hrDeviceErrors>

									</hrDeviceEntry>
									<hrDeviceEntry oid="1.3.6.1.2.1.25.3.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1028</index>
										<instance instanceIndex="4" instanceName="hrDeviceIndex" instanceValue="1028">1028</instance>
										<hrDeviceIndex oid="1.3.6.1.2.1.25.3.2.1.1.1028" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>1028</value>
										</hrDeviceIndex>
										<hrDeviceType oid="1.3.6.1.2.1.25.3.2.1.2.1028" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.]]></description>
											<value>1.3.6.1.2.1.25.3.1.4</value>
										</hrDeviceType>
										<hrDeviceDescr oid="1.3.6.1.2.1.25.3.2.1.3.1028" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.]]></description>
											<value>network interface sit0</value>
										</hrDeviceDescr>
										<hrDeviceID oid="1.3.6.1.2.1.25.3.2.1.4.1028" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID for this device.]]></description>
											<value>0.0</value>
										</hrDeviceID>
										<hrDeviceStatus oid="1.3.6.1.2.1.25.3.2.1.5.1028" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.]]></description>
											<value>5</value>
										</hrDeviceStatus>
										<hrDeviceErrors oid="1.3.6.1.2.1.25.3.2.1.6.1028" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
											<description><![CDATA[The number of errors detected on this device.  It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.  However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization.]]></description>
											<value>0</value>
										</hrDeviceErrors>

									</hrDeviceEntry>
									<hrDeviceEntry oid="1.3.6.1.2.1.25.3.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1029</index>
										<instance instanceIndex="5" instanceName="hrDeviceIndex" instanceValue="1029">1029</instance>
										<hrDeviceIndex oid="1.3.6.1.2.1.25.3.2.1.1.1029" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>1029</value>
										</hrDeviceIndex>
										<hrDeviceType oid="1.3.6.1.2.1.25.3.2.1.2.1029" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.]]></description>
											<value>1.3.6.1.2.1.25.3.1.4</value>
										</hrDeviceType>
										<hrDeviceDescr oid="1.3.6.1.2.1.25.3.2.1.3.1029" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.]]></description>
											<value>network interface br-wifi</value>
										</hrDeviceDescr>
										<hrDeviceID oid="1.3.6.1.2.1.25.3.2.1.4.1029" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID for this device.]]></description>
											<value>0.0</value>
										</hrDeviceID>
										<hrDeviceStatus oid="1.3.6.1.2.1.25.3.2.1.5.1029" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.]]></description>
											<value>2</value>
										</hrDeviceStatus>
										<hrDeviceErrors oid="1.3.6.1.2.1.25.3.2.1.6.1029" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
											<description><![CDATA[The number of errors detected on this device.  It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.  However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization.]]></description>
											<value>0</value>
										</hrDeviceErrors>

									</hrDeviceEntry>
									<hrDeviceEntry oid="1.3.6.1.2.1.25.3.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1030</index>
										<instance instanceIndex="6" instanceName="hrDeviceIndex" instanceValue="1030">1030</instance>
										<hrDeviceIndex oid="1.3.6.1.2.1.25.3.2.1.1.1030" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>1030</value>
										</hrDeviceIndex>
										<hrDeviceType oid="1.3.6.1.2.1.25.3.2.1.2.1030" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.]]></description>
											<value>1.3.6.1.2.1.25.3.1.4</value>
										</hrDeviceType>
										<hrDeviceDescr oid="1.3.6.1.2.1.25.3.2.1.3.1030" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.]]></description>
											<value>network interface eth0.19</value>
										</hrDeviceDescr>
										<hrDeviceID oid="1.3.6.1.2.1.25.3.2.1.4.1030" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID for this device.]]></description>
											<value>0.0</value>
										</hrDeviceID>
										<hrDeviceStatus oid="1.3.6.1.2.1.25.3.2.1.5.1030" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.]]></description>
											<value>2</value>
										</hrDeviceStatus>
										<hrDeviceErrors oid="1.3.6.1.2.1.25.3.2.1.6.1030" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
											<description><![CDATA[The number of errors detected on this device.  It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.  However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization.]]></description>
											<value>0</value>
										</hrDeviceErrors>

									</hrDeviceEntry>
									<hrDeviceEntry oid="1.3.6.1.2.1.25.3.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1031</index>
										<instance instanceIndex="7" instanceName="hrDeviceIndex" instanceValue="1031">1031</instance>
										<hrDeviceIndex oid="1.3.6.1.2.1.25.3.2.1.1.1031" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>1031</value>
										</hrDeviceIndex>
										<hrDeviceType oid="1.3.6.1.2.1.25.3.2.1.2.1031" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.]]></description>
											<value>1.3.6.1.2.1.25.3.1.4</value>
										</hrDeviceType>
										<hrDeviceDescr oid="1.3.6.1.2.1.25.3.2.1.3.1031" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.]]></description>
											<value>network interface eth0.20</value>
										</hrDeviceDescr>
										<hrDeviceID oid="1.3.6.1.2.1.25.3.2.1.4.1031" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID for this device.]]></description>
											<value>0.0</value>
										</hrDeviceID>
										<hrDeviceStatus oid="1.3.6.1.2.1.25.3.2.1.5.1031" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.]]></description>
											<value>2</value>
										</hrDeviceStatus>
										<hrDeviceErrors oid="1.3.6.1.2.1.25.3.2.1.6.1031" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
											<description><![CDATA[The number of errors detected on this device.  It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.  However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization.]]></description>
											<value>0</value>
										</hrDeviceErrors>

									</hrDeviceEntry>
									<hrDeviceEntry oid="1.3.6.1.2.1.25.3.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1032</index>
										<instance instanceIndex="8" instanceName="hrDeviceIndex" instanceValue="1032">1032</instance>
										<hrDeviceIndex oid="1.3.6.1.2.1.25.3.2.1.1.1032" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>1032</value>
										</hrDeviceIndex>
										<hrDeviceType oid="1.3.6.1.2.1.25.3.2.1.2.1032" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.]]></description>
											<value>1.3.6.1.2.1.25.3.1.4</value>
										</hrDeviceType>
										<hrDeviceDescr oid="1.3.6.1.2.1.25.3.2.1.3.1032" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.]]></description>
											<value>network interface eth0.18</value>
										</hrDeviceDescr>
										<hrDeviceID oid="1.3.6.1.2.1.25.3.2.1.4.1032" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID for this device.]]></description>
											<value>0.0</value>
										</hrDeviceID>
										<hrDeviceStatus oid="1.3.6.1.2.1.25.3.2.1.5.1032" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.]]></description>
											<value>2</value>
										</hrDeviceStatus>
										<hrDeviceErrors oid="1.3.6.1.2.1.25.3.2.1.6.1032" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
											<description><![CDATA[The number of errors detected on this device.  It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.  However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization.]]></description>
											<value>0</value>
										</hrDeviceErrors>

									</hrDeviceEntry>
									<hrDeviceEntry oid="1.3.6.1.2.1.25.3.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1033</index>
										<instance instanceIndex="9" instanceName="hrDeviceIndex" instanceValue="1033">1033</instance>
										<hrDeviceIndex oid="1.3.6.1.2.1.25.3.2.1.1.1033" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>1033</value>
										</hrDeviceIndex>
										<hrDeviceType oid="1.3.6.1.2.1.25.3.2.1.2.1033" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.]]></description>
											<value>1.3.6.1.2.1.25.3.1.4</value>
										</hrDeviceType>
										<hrDeviceDescr oid="1.3.6.1.2.1.25.3.2.1.3.1033" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.]]></description>
											<value>network interface eth0.17</value>
										</hrDeviceDescr>
										<hrDeviceID oid="1.3.6.1.2.1.25.3.2.1.4.1033" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID for this device.]]></description>
											<value>0.0</value>
										</hrDeviceID>
										<hrDeviceStatus oid="1.3.6.1.2.1.25.3.2.1.5.1033" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.]]></description>
											<value>2</value>
										</hrDeviceStatus>
										<hrDeviceErrors oid="1.3.6.1.2.1.25.3.2.1.6.1033" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
											<description><![CDATA[The number of errors detected on this device.  It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.  However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization.]]></description>
											<value>0</value>
										</hrDeviceErrors>

									</hrDeviceEntry>
									<hrDeviceEntry oid="1.3.6.1.2.1.25.3.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1034</index>
										<instance instanceIndex="10" instanceName="hrDeviceIndex" instanceValue="1034">1034</instance>
										<hrDeviceIndex oid="1.3.6.1.2.1.25.3.2.1.1.1034" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>1034</value>
										</hrDeviceIndex>
										<hrDeviceType oid="1.3.6.1.2.1.25.3.2.1.2.1034" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.]]></description>
											<value>1.3.6.1.2.1.25.3.1.4</value>
										</hrDeviceType>
										<hrDeviceDescr oid="1.3.6.1.2.1.25.3.2.1.3.1034" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.]]></description>
											<value>network interface eth0.2</value>
										</hrDeviceDescr>
										<hrDeviceID oid="1.3.6.1.2.1.25.3.2.1.4.1034" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID for this device.]]></description>
											<value>0.0</value>
										</hrDeviceID>
										<hrDeviceStatus oid="1.3.6.1.2.1.25.3.2.1.5.1034" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.]]></description>
											<value>2</value>
										</hrDeviceStatus>
										<hrDeviceErrors oid="1.3.6.1.2.1.25.3.2.1.6.1034" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
											<description><![CDATA[The number of errors detected on this device.  It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.  However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization.]]></description>
											<value>0</value>
										</hrDeviceErrors>

									</hrDeviceEntry>
									<hrDeviceEntry oid="1.3.6.1.2.1.25.3.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1035</index>
										<instance instanceIndex="11" instanceName="hrDeviceIndex" instanceValue="1035">1035</instance>
										<hrDeviceIndex oid="1.3.6.1.2.1.25.3.2.1.1.1035" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>1035</value>
										</hrDeviceIndex>
										<hrDeviceType oid="1.3.6.1.2.1.25.3.2.1.2.1035" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.]]></description>
											<value>1.3.6.1.2.1.25.3.1.4</value>
										</hrDeviceType>
										<hrDeviceDescr oid="1.3.6.1.2.1.25.3.2.1.3.1035" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.]]></description>
											<value>network interface wlan0</value>
										</hrDeviceDescr>
										<hrDeviceID oid="1.3.6.1.2.1.25.3.2.1.4.1035" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID for this device.]]></description>
											<value>0.0</value>
										</hrDeviceID>
										<hrDeviceStatus oid="1.3.6.1.2.1.25.3.2.1.5.1035" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.]]></description>
											<value>2</value>
										</hrDeviceStatus>
										<hrDeviceErrors oid="1.3.6.1.2.1.25.3.2.1.6.1035" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
											<description><![CDATA[The number of errors detected on this device.  It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.  However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization.]]></description>
											<value>0</value>
										</hrDeviceErrors>

									</hrDeviceEntry>
									<hrDeviceEntry oid="1.3.6.1.2.1.25.3.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1036</index>
										<instance instanceIndex="12" instanceName="hrDeviceIndex" instanceValue="1036">1036</instance>
										<hrDeviceIndex oid="1.3.6.1.2.1.25.3.2.1.1.1036" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>1036</value>
										</hrDeviceIndex>
										<hrDeviceType oid="1.3.6.1.2.1.25.3.2.1.2.1036" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.]]></description>
											<value>1.3.6.1.2.1.25.3.1.4</value>
										</hrDeviceType>
										<hrDeviceDescr oid="1.3.6.1.2.1.25.3.2.1.3.1036" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.]]></description>
											<value>network interface 6in4-henet</value>
										</hrDeviceDescr>
										<hrDeviceID oid="1.3.6.1.2.1.25.3.2.1.4.1036" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID for this device.]]></description>
											<value>0.0</value>
										</hrDeviceID>
										<hrDeviceStatus oid="1.3.6.1.2.1.25.3.2.1.5.1036" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.]]></description>
											<value>2</value>
										</hrDeviceStatus>
										<hrDeviceErrors oid="1.3.6.1.2.1.25.3.2.1.6.1036" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
											<description><![CDATA[The number of errors detected on this device.  It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.  However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization.]]></description>
											<value>0</value>
										</hrDeviceErrors>

									</hrDeviceEntry>
									<hrDeviceEntry oid="1.3.6.1.2.1.25.3.2.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one device contained by the host.  As an example, an instance of the hrDeviceType object might be named hrDeviceType.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1037</index>
										<instance instanceIndex="13" instanceName="hrDeviceIndex" instanceValue="1037">1037</instance>
										<hrDeviceIndex oid="1.3.6.1.2.1.25.3.2.1.1.1037" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each device contained by the host. The value for each device must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>1037</value>
										</hrDeviceIndex>
										<hrDeviceType oid="1.3.6.1.2.1.25.3.2.1.2.1037" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[An indication of the type of device.  If this value is `hrDeviceProcessor { hrDeviceTypes 3 }' then an entry exists in the hrProcessorTable which corresponds to this device.  If this value is `hrDeviceNetwork { hrDeviceTypes 4 }', then an entry exists in the hrNetworkTable which corresponds to this device.  If this value is `hrDevicePrinter { hrDeviceTypes 5 }', then an entry exists in the hrPrinterTable which corresponds to this device.  If this value is `hrDeviceDiskStorage { hrDeviceTypes 6 }', then an entry exists in the hrDiskStorageTable which corresponds to this device.]]></description>
											<value>1.3.6.1.2.1.25.3.1.4</value>
										</hrDeviceType>
										<hrDeviceDescr oid="1.3.6.1.2.1.25.3.2.1.3.1037" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A textual description of this device, including the device's manufacturer and revision, and optionally, its serial number.]]></description>
											<value>network interface tun0</value>
										</hrDeviceDescr>
										<hrDeviceID oid="1.3.6.1.2.1.25.3.2.1.4.1037" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID for this device.]]></description>
											<value>0.0</value>
										</hrDeviceID>
										<hrDeviceStatus oid="1.3.6.1.2.1.25.3.2.1.5.1037" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The current operational state of the device described by this row of the table.  A value unknown(1) indicates that the current state of the device is unknown.  running(2) indicates that the device is up and running and that no unusual error conditions are known.  The warning(3) state indicates that agent has been informed of an unusual error condition by the operational software (e.g., a disk device driver) but that the device is still 'operational'.  An example would be a high number of soft errors on a disk.  A value of testing(4), indicates that the device is not available for use because it is in the testing state. The state of down(5) is used only when the agent has been informed that the device is not available for any use.]]></description>
											<value>2</value>
										</hrDeviceStatus>
										<hrDeviceErrors oid="1.3.6.1.2.1.25.3.2.1.6.1037" primitiveSyntax="INTEGER" snmpSyntax ="Counter32" access="read-only" units="null">
											<description><![CDATA[The number of errors detected on this device.  It should be noted that as this object has a SYNTAX of Counter32, that it does not have a defined initial value.  However, it is recommended that this object be initialized to zero, even though management stations must not depend on such an initialization.]]></description>
											<value>0</value>
										</hrDeviceErrors>

									</hrDeviceEntry>
								</hrDeviceTable>
								<hrProcessorTable oid="1.3.6.1.2.1.25.3.3">
									<hrProcessorEntry oid="1.3.6.1.2.1.25.3.3.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one processor contained by the host.  The hrDeviceIndex in the index represents the entry in the hrDeviceTable that corresponds to the hrProcessorEntry.  As an example of how objects in this table are named, an instance of the hrProcessorFrwID object might be named hrProcessorFrwID.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">768</index>
										<instance instanceIndex="1" instanceName="hrDeviceIndex." instanceValue="768.">768</instance>
										<hrProcessorFrwID oid="1.3.6.1.2.1.25.3.3.1.1.768" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The product ID of the firmware associated with the processor.]]></description>
											<value>0.0</value>
										</hrProcessorFrwID>
										<hrProcessorLoad oid="1.3.6.1.2.1.25.3.3.1.2.768" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The average, over the last minute, of the percentage of time that this processor was not idle. Implementations may approximate this one minute smoothing period if necessary.]]></description>
											<value>1</value>
										</hrProcessorLoad>

									</hrProcessorEntry>
								</hrProcessorTable>
								<hrNetworkTable oid="1.3.6.1.2.1.25.3.4">
									<hrNetworkEntry oid="1.3.6.1.2.1.25.3.4.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one network device contained by the host.  The hrDeviceIndex in the index represents the entry in the hrDeviceTable that corresponds to the hrNetworkEntry.  As an example of how objects in this table are named, an instance of the hrNetworkIfIndex object might be named hrNetworkIfIndex.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1025</index>
										<instance instanceIndex="1" instanceName="hrDeviceIndex." instanceValue="1025.">1025</instance>
										<hrNetworkIfIndex oid="1.3.6.1.2.1.25.3.4.1.1.1025" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The value of ifIndex which corresponds to this network device. If this device is not represented in the ifTable, then this value shall be zero.]]></description>
											<value>1</value>
										</hrNetworkIfIndex>

									</hrNetworkEntry>
									<hrNetworkEntry oid="1.3.6.1.2.1.25.3.4.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one network device contained by the host.  The hrDeviceIndex in the index represents the entry in the hrDeviceTable that corresponds to the hrNetworkEntry.  As an example of how objects in this table are named, an instance of the hrNetworkIfIndex object might be named hrNetworkIfIndex.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1026</index>
										<instance instanceIndex="2" instanceName="hrDeviceIndex." instanceValue="1026.">1026</instance>
										<hrNetworkIfIndex oid="1.3.6.1.2.1.25.3.4.1.1.1026" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The value of ifIndex which corresponds to this network device. If this device is not represented in the ifTable, then this value shall be zero.]]></description>
											<value>2</value>
										</hrNetworkIfIndex>

									</hrNetworkEntry>
									<hrNetworkEntry oid="1.3.6.1.2.1.25.3.4.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one network device contained by the host.  The hrDeviceIndex in the index represents the entry in the hrDeviceTable that corresponds to the hrNetworkEntry.  As an example of how objects in this table are named, an instance of the hrNetworkIfIndex object might be named hrNetworkIfIndex.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1028</index>
										<instance instanceIndex="3" instanceName="hrDeviceIndex." instanceValue="1028.">1028</instance>
										<hrNetworkIfIndex oid="1.3.6.1.2.1.25.3.4.1.1.1028" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The value of ifIndex which corresponds to this network device. If this device is not represented in the ifTable, then this value shall be zero.]]></description>
											<value>4</value>
										</hrNetworkIfIndex>

									</hrNetworkEntry>
									<hrNetworkEntry oid="1.3.6.1.2.1.25.3.4.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one network device contained by the host.  The hrDeviceIndex in the index represents the entry in the hrDeviceTable that corresponds to the hrNetworkEntry.  As an example of how objects in this table are named, an instance of the hrNetworkIfIndex object might be named hrNetworkIfIndex.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1029</index>
										<instance instanceIndex="4" instanceName="hrDeviceIndex." instanceValue="1029.">1029</instance>
										<hrNetworkIfIndex oid="1.3.6.1.2.1.25.3.4.1.1.1029" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The value of ifIndex which corresponds to this network device. If this device is not represented in the ifTable, then this value shall be zero.]]></description>
											<value>5</value>
										</hrNetworkIfIndex>

									</hrNetworkEntry>
									<hrNetworkEntry oid="1.3.6.1.2.1.25.3.4.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one network device contained by the host.  The hrDeviceIndex in the index represents the entry in the hrDeviceTable that corresponds to the hrNetworkEntry.  As an example of how objects in this table are named, an instance of the hrNetworkIfIndex object might be named hrNetworkIfIndex.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1030</index>
										<instance instanceIndex="5" instanceName="hrDeviceIndex." instanceValue="1030.">1030</instance>
										<hrNetworkIfIndex oid="1.3.6.1.2.1.25.3.4.1.1.1030" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The value of ifIndex which corresponds to this network device. If this device is not represented in the ifTable, then this value shall be zero.]]></description>
											<value>6</value>
										</hrNetworkIfIndex>

									</hrNetworkEntry>
									<hrNetworkEntry oid="1.3.6.1.2.1.25.3.4.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one network device contained by the host.  The hrDeviceIndex in the index represents the entry in the hrDeviceTable that corresponds to the hrNetworkEntry.  As an example of how objects in this table are named, an instance of the hrNetworkIfIndex object might be named hrNetworkIfIndex.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1031</index>
										<instance instanceIndex="6" instanceName="hrDeviceIndex." instanceValue="1031.">1031</instance>
										<hrNetworkIfIndex oid="1.3.6.1.2.1.25.3.4.1.1.1031" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The value of ifIndex which corresponds to this network device. If this device is not represented in the ifTable, then this value shall be zero.]]></description>
											<value>7</value>
										</hrNetworkIfIndex>

									</hrNetworkEntry>
									<hrNetworkEntry oid="1.3.6.1.2.1.25.3.4.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one network device contained by the host.  The hrDeviceIndex in the index represents the entry in the hrDeviceTable that corresponds to the hrNetworkEntry.  As an example of how objects in this table are named, an instance of the hrNetworkIfIndex object might be named hrNetworkIfIndex.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1032</index>
										<instance instanceIndex="7" instanceName="hrDeviceIndex." instanceValue="1032.">1032</instance>
										<hrNetworkIfIndex oid="1.3.6.1.2.1.25.3.4.1.1.1032" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The value of ifIndex which corresponds to this network device. If this device is not represented in the ifTable, then this value shall be zero.]]></description>
											<value>8</value>
										</hrNetworkIfIndex>

									</hrNetworkEntry>
									<hrNetworkEntry oid="1.3.6.1.2.1.25.3.4.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one network device contained by the host.  The hrDeviceIndex in the index represents the entry in the hrDeviceTable that corresponds to the hrNetworkEntry.  As an example of how objects in this table are named, an instance of the hrNetworkIfIndex object might be named hrNetworkIfIndex.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1033</index>
										<instance instanceIndex="8" instanceName="hrDeviceIndex." instanceValue="1033.">1033</instance>
										<hrNetworkIfIndex oid="1.3.6.1.2.1.25.3.4.1.1.1033" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The value of ifIndex which corresponds to this network device. If this device is not represented in the ifTable, then this value shall be zero.]]></description>
											<value>9</value>
										</hrNetworkIfIndex>

									</hrNetworkEntry>
									<hrNetworkEntry oid="1.3.6.1.2.1.25.3.4.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one network device contained by the host.  The hrDeviceIndex in the index represents the entry in the hrDeviceTable that corresponds to the hrNetworkEntry.  As an example of how objects in this table are named, an instance of the hrNetworkIfIndex object might be named hrNetworkIfIndex.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1034</index>
										<instance instanceIndex="9" instanceName="hrDeviceIndex." instanceValue="1034.">1034</instance>
										<hrNetworkIfIndex oid="1.3.6.1.2.1.25.3.4.1.1.1034" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The value of ifIndex which corresponds to this network device. If this device is not represented in the ifTable, then this value shall be zero.]]></description>
											<value>10</value>
										</hrNetworkIfIndex>

									</hrNetworkEntry>
									<hrNetworkEntry oid="1.3.6.1.2.1.25.3.4.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one network device contained by the host.  The hrDeviceIndex in the index represents the entry in the hrDeviceTable that corresponds to the hrNetworkEntry.  As an example of how objects in this table are named, an instance of the hrNetworkIfIndex object might be named hrNetworkIfIndex.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1035</index>
										<instance instanceIndex="10" instanceName="hrDeviceIndex." instanceValue="1035.">1035</instance>
										<hrNetworkIfIndex oid="1.3.6.1.2.1.25.3.4.1.1.1035" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The value of ifIndex which corresponds to this network device. If this device is not represented in the ifTable, then this value shall be zero.]]></description>
											<value>11</value>
										</hrNetworkIfIndex>

									</hrNetworkEntry>
									<hrNetworkEntry oid="1.3.6.1.2.1.25.3.4.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one network device contained by the host.  The hrDeviceIndex in the index represents the entry in the hrDeviceTable that corresponds to the hrNetworkEntry.  As an example of how objects in this table are named, an instance of the hrNetworkIfIndex object might be named hrNetworkIfIndex.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1036</index>
										<instance instanceIndex="11" instanceName="hrDeviceIndex." instanceValue="1036.">1036</instance>
										<hrNetworkIfIndex oid="1.3.6.1.2.1.25.3.4.1.1.1036" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The value of ifIndex which corresponds to this network device. If this device is not represented in the ifTable, then this value shall be zero.]]></description>
											<value>12</value>
										</hrNetworkIfIndex>

									</hrNetworkEntry>
									<hrNetworkEntry oid="1.3.6.1.2.1.25.3.4.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one network device contained by the host.  The hrDeviceIndex in the index represents the entry in the hrDeviceTable that corresponds to the hrNetworkEntry.  As an example of how objects in this table are named, an instance of the hrNetworkIfIndex object might be named hrNetworkIfIndex.3]]></description>
										<index name="hrDeviceIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.2.1.1" access="read-only">1037</index>
										<instance instanceIndex="12" instanceName="hrDeviceIndex." instanceValue="1037.">1037</instance>
										<hrNetworkIfIndex oid="1.3.6.1.2.1.25.3.4.1.1.1037" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The value of ifIndex which corresponds to this network device. If this device is not represented in the ifTable, then this value shall be zero.]]></description>
											<value>13</value>
										</hrNetworkIfIndex>

									</hrNetworkEntry>
								</hrNetworkTable>
								<hrPrinterTable oid="1.3.6.1.2.1.25.3.5">
								</hrPrinterTable>
								<hrDiskStorageTable oid="1.3.6.1.2.1.25.3.6">
								</hrDiskStorageTable>
								<hrPartitionTable oid="1.3.6.1.2.1.25.3.7">
								</hrPartitionTable>
								<hrFSTable oid="1.3.6.1.2.1.25.3.8">
									<hrFSEntry oid="1.3.6.1.2.1.25.3.8.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one file system local to this host or remotely mounted from a file server. File systems that are in only one user's environment on a multi-user system will not be included in this table.  As an example of how objects in this table are named, an instance of the hrFSMountPoint object might be named hrFSMountPoint.3]]></description>
										<index name="hrFSIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.8.1.1" access="read-only">1</index>
										<instance instanceIndex="1" instanceName="hrFSIndex" instanceValue="1">1</instance>
										<hrFSIndex oid="1.3.6.1.2.1.25.3.8.1.1.1" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each file system local to this host.  The value for each file system must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>1</value>
										</hrFSIndex>
										<hrFSMountPoint oid="1.3.6.1.2.1.25.3.8.1.2.1" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[The path name of the root of this file system.]]></description>
											<value>/rom</value>
										</hrFSMountPoint>
										<hrFSRemoteMountPoint oid="1.3.6.1.2.1.25.3.8.1.3.1" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A description of the name and/or address of the server that this file system is mounted from.  This may also include parameters such as the mount point on the remote file system.  If this is not a remote file system, this string should have a length of zero.]]></description>
											<value></value>
										</hrFSRemoteMountPoint>
										<hrFSType oid="1.3.6.1.2.1.25.3.8.1.4.1" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The value of this object identifies the type of this file system.]]></description>
											<value>1.3.6.1.2.1.25.3.9.1</value>
										</hrFSType>
										<hrFSAccess oid="1.3.6.1.2.1.25.3.8.1.5.1" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[An indication if this file system is logically configured by the operating system to be readable and writable or only readable.  This does not represent any local access-control policy, except one that is applied to the file system as a whole.]]></description>
											<value>2</value>
										</hrFSAccess>
										<hrFSBootable oid="1.3.6.1.2.1.25.3.8.1.6.1" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A flag indicating whether this file system is bootable.]]></description>
											<value>2</value>
										</hrFSBootable>
										<hrFSStorageIndex oid="1.3.6.1.2.1.25.3.8.1.7.1" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The index of the hrStorageEntry that represents information about this file system.  If there is no such information available, then this value shall be zero.  The relevant storage entry will be useful in tracking the percent usage of this file system and diagnosing errors that may occur when it runs out of space.]]></description>
											<value>31</value>
										</hrFSStorageIndex>
										<hrFSLastFullBackupDate oid="1.3.6.1.2.1.25.3.8.1.8.1" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-write" units="null">
											<description><![CDATA[The last date at which this complete file system was copied to another storage device for backup.  This information is useful for ensuring that backups are being performed regularly.  If this information is not known, then this variable shall have the value corresponding to January 1, year 0000, 00:00:00.0, which is encoded as (hex)'00 00 01 01 00 00 00 00'.]]></description>
											<value>00:00:01:01:00:00:00:00</value>
										</hrFSLastFullBackupDate>
										<hrFSLastPartialBackupDate oid="1.3.6.1.2.1.25.3.8.1.9.1" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-write" units="null">
											<description><![CDATA[The last date at which a portion of this file system was copied to another storage device for backup.  This information is useful for ensuring that backups are being performed regularly.  If this information is not known, then this variable shall have the value corresponding to January 1, year 0000, 00:00:00.0, which is encoded as (hex)'00 00 01 01 00 00 00 00'.]]></description>
											<value>00:00:01:01:00:00:00:00</value>
										</hrFSLastPartialBackupDate>

									</hrFSEntry>
									<hrFSEntry oid="1.3.6.1.2.1.25.3.8.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one file system local to this host or remotely mounted from a file server. File systems that are in only one user's environment on a multi-user system will not be included in this table.  As an example of how objects in this table are named, an instance of the hrFSMountPoint object might be named hrFSMountPoint.3]]></description>
										<index name="hrFSIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.8.1.1" access="read-only">2</index>
										<instance instanceIndex="2" instanceName="hrFSIndex" instanceValue="2">2</instance>
										<hrFSIndex oid="1.3.6.1.2.1.25.3.8.1.1.2" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each file system local to this host.  The value for each file system must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>2</value>
										</hrFSIndex>
										<hrFSMountPoint oid="1.3.6.1.2.1.25.3.8.1.2.2" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[The path name of the root of this file system.]]></description>
											<value>/overlay</value>
										</hrFSMountPoint>
										<hrFSRemoteMountPoint oid="1.3.6.1.2.1.25.3.8.1.3.2" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A description of the name and/or address of the server that this file system is mounted from.  This may also include parameters such as the mount point on the remote file system.  If this is not a remote file system, this string should have a length of zero.]]></description>
											<value></value>
										</hrFSRemoteMountPoint>
										<hrFSType oid="1.3.6.1.2.1.25.3.8.1.4.2" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The value of this object identifies the type of this file system.]]></description>
											<value>1.3.6.1.2.1.25.3.9.1</value>
										</hrFSType>
										<hrFSAccess oid="1.3.6.1.2.1.25.3.8.1.5.2" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[An indication if this file system is logically configured by the operating system to be readable and writable or only readable.  This does not represent any local access-control policy, except one that is applied to the file system as a whole.]]></description>
											<value>1</value>
										</hrFSAccess>
										<hrFSBootable oid="1.3.6.1.2.1.25.3.8.1.6.2" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A flag indicating whether this file system is bootable.]]></description>
											<value>2</value>
										</hrFSBootable>
										<hrFSStorageIndex oid="1.3.6.1.2.1.25.3.8.1.7.2" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The index of the hrStorageEntry that represents information about this file system.  If there is no such information available, then this value shall be zero.  The relevant storage entry will be useful in tracking the percent usage of this file system and diagnosing errors that may occur when it runs out of space.]]></description>
											<value>32</value>
										</hrFSStorageIndex>
										<hrFSLastFullBackupDate oid="1.3.6.1.2.1.25.3.8.1.8.2" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-write" units="null">
											<description><![CDATA[The last date at which this complete file system was copied to another storage device for backup.  This information is useful for ensuring that backups are being performed regularly.  If this information is not known, then this variable shall have the value corresponding to January 1, year 0000, 00:00:00.0, which is encoded as (hex)'00 00 01 01 00 00 00 00'.]]></description>
											<value>00:00:01:01:00:00:00:00</value>
										</hrFSLastFullBackupDate>
										<hrFSLastPartialBackupDate oid="1.3.6.1.2.1.25.3.8.1.9.2" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-write" units="null">
											<description><![CDATA[The last date at which a portion of this file system was copied to another storage device for backup.  This information is useful for ensuring that backups are being performed regularly.  If this information is not known, then this variable shall have the value corresponding to January 1, year 0000, 00:00:00.0, which is encoded as (hex)'00 00 01 01 00 00 00 00'.]]></description>
											<value>00:00:01:01:00:00:00:00</value>
										</hrFSLastPartialBackupDate>

									</hrFSEntry>
									<hrFSEntry oid="1.3.6.1.2.1.25.3.8.1" primitiveSyntax="SEQUENCE" snmpSyntax ="SEQUENCE" access="not-accessible" units="null">
										<description><![CDATA[A (conceptual) entry for one file system local to this host or remotely mounted from a file server. File systems that are in only one user's environment on a multi-user system will not be included in this table.  As an example of how objects in this table are named, an instance of the hrFSMountPoint object might be named hrFSMountPoint.3]]></description>
										<index name="hrFSIndex" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" oid="1.3.6.1.2.1.25.3.8.1.1" access="read-only">3</index>
										<instance instanceIndex="3" instanceName="hrFSIndex" instanceValue="3">3</instance>
										<hrFSIndex oid="1.3.6.1.2.1.25.3.8.1.1.3" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A unique value for each file system local to this host.  The value for each file system must remain constant at least from one re-initialization of the agent to the next re-initialization.]]></description>
											<value>3</value>
										</hrFSIndex>
										<hrFSMountPoint oid="1.3.6.1.2.1.25.3.8.1.2.3" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[The path name of the root of this file system.]]></description>
											<value>/</value>
										</hrFSMountPoint>
										<hrFSRemoteMountPoint oid="1.3.6.1.2.1.25.3.8.1.3.3" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-only" units="null">
											<description><![CDATA[A description of the name and/or address of the server that this file system is mounted from.  This may also include parameters such as the mount point on the remote file system.  If this is not a remote file system, this string should have a length of zero.]]></description>
											<value></value>
										</hrFSRemoteMountPoint>
										<hrFSType oid="1.3.6.1.2.1.25.3.8.1.4.3" primitiveSyntax="OBJECT IDENTIFIER" snmpSyntax ="OBJECT IDENTIFIER" access="read-only" units="null">
											<description><![CDATA[The value of this object identifies the type of this file system.]]></description>
											<value>1.3.6.1.2.1.25.3.9.1</value>
										</hrFSType>
										<hrFSAccess oid="1.3.6.1.2.1.25.3.8.1.5.3" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[An indication if this file system is logically configured by the operating system to be readable and writable or only readable.  This does not represent any local access-control policy, except one that is applied to the file system as a whole.]]></description>
											<value>1</value>
										</hrFSAccess>
										<hrFSBootable oid="1.3.6.1.2.1.25.3.8.1.6.3" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[A flag indicating whether this file system is bootable.]]></description>
											<value>1</value>
										</hrFSBootable>
										<hrFSStorageIndex oid="1.3.6.1.2.1.25.3.8.1.7.3" primitiveSyntax="INTEGER" snmpSyntax ="INTEGER" access="read-only" units="null">
											<description><![CDATA[The index of the hrStorageEntry that represents information about this file system.  If there is no such information available, then this value shall be zero.  The relevant storage entry will be useful in tracking the percent usage of this file system and diagnosing errors that may occur when it runs out of space.]]></description>
											<value>33</value>
										</hrFSStorageIndex>
										<hrFSLastFullBackupDate oid="1.3.6.1.2.1.25.3.8.1.8.3" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-write" units="null">
											<description><![CDATA[The last date at which this complete file system was copied to another storage device for backup.  This information is useful for ensuring that backups are being performed regularly.  If this information is not known, then this variable shall have the value corresponding to January 1, year 0000, 00:00:00.0, which is encoded as (hex)'00 00 01 01 00 00 00 00'.]]></description>
											<value>00:00:01:01:00:00:00:00</value>
										</hrFSLastFullBackupDate>
										<hrFSLastPartialBackupDate oid="1.3.6.1.2.1.25.3.8.1.9.3" primitiveSyntax="OCTET STRING" snmpSyntax ="OCTET STRING" access="read-write" units="null">
											<description><![CDATA[The last date at which a portion of this file system was copied to another storage device for backup.  This information is useful for ensuring that backups are being performed regularly.  If this information is not known, then this variable shall have the value corresponding to January 1, year 0000, 00:00:00.0, which is encoded as (hex)'00 00 01 01 00 00 00 00'.]]></description>
											<value>00:00:01:01:00:00:00:00</value>
										</hrFSLastPartialBackupDate>

									</hrFSEntry>
								</hrFSTable>
								<hrFSTypes oid="1.3.6.1.2.1.25.3.9">
								</hrFSTypes>
							</hrDevice>
							<hrSWRun oid="1.3.6.1.2.1.25.4">
									<hrSWOSIndex oid="1.3.6.1.2.1.25.4.1" primitiveSyntax="OBJECT-TYPE" snmpSyntax ="INTEGER" access="read-only" units="null">
										<description><![CDATA[The value of the hrSWRunIndex for the hrSWRunEntry that represents the primary operating system running on this host.  This object is useful for quickly and uniquely identifying that primary operating system.]]></description>
										<value>lo</value>
									</hrSWOSIndex>
								<hrSWRunTable oid="1.3.6.1.2.1.25.4.2">
								</hrSWRunTable>
							</hrSWRun>
							<hrSWRunPerf oid="1.3.6.1.2.1.25.5">
								<hrSWRunPerfTable oid="1.3.6.1.2.1.25.5.1">
								</hrSWRunPerfTable>
							</hrSWRunPerf>
							<hrSWInstalled oid="1.3.6.1.2.1.25.6">
									<hrSWInstalledLastChange oid="1.3.6.1.2.1.25.6.1" primitiveSyntax="OBJECT-TYPE" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime when an entry in the hrSWInstalledTable was last added, renamed, or deleted.  Because this table is likely to contain many entries, polling of this object allows a management station to determine when re-downloading of the table might be useful.]]></description>
										<value>lo</value>
									</hrSWInstalledLastChange>
									<hrSWInstalledLastUpdateTime oid="1.3.6.1.2.1.25.6.2" primitiveSyntax="OBJECT-TYPE" snmpSyntax ="TimeTicks" access="read-only" units="null">
										<description><![CDATA[The value of sysUpTime when the hrSWInstalledTable was last completely updated.  Because caching of this data will be a popular implementation strategy, retrieval of this object allows a management station to obtain a guarantee that no data in this table is older than the indicated time.]]></description>
										<value>lo</value>
									</hrSWInstalledLastUpdateTime>
								<hrSWInstalledTable oid="1.3.6.1.2.1.25.6.3">
								</hrSWInstalledTable>
							</hrSWInstalled>
							<hrMIBAdminInfo oid="1.3.6.1.2.1.25.7">
								<hrMIBCompliances oid="1.3.6.1.2.1.25.7.2">
								</hrMIBCompliances>
								<hrMIBGroups oid="1.3.6.1.2.1.25.7.3">
								</hrMIBGroups>
							</hrMIBAdminInfo>
						</host>
					</mib-2>
				</mgmt>
			</internet>
		</dod>
	</org>
</iso>
</root>